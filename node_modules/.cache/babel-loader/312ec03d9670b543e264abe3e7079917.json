{"ast":null,"code":"import _slicedToArray from\"/Users/maa48/github-projects/etesam-startpage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import styled from'styled-components';import{Header2}from'../styles/Headers';import{jsx as _jsx}from\"react/jsx-runtime\";function Today(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),today=_useState2[0],setToday=_useState2[1];function getMonth(index){var months=['January','February','March','April','May','June','July','August','September','October','November','December'];for(var i=0;i<months.length;i++){if(i===index){return months[i];}}console.error('THAT MONTH DOES NOT EXIST!');return;}useEffect(function(){var d=new Date();var monthNumber=d.getMonth();var day=d.getDate();var year=d.getFullYear();setToday(getMonth(monthNumber)+' '+day+' '+year);var interval=setInterval(function(){d=new Date();monthNumber=d.getMonth();day=d.getDate();year=d.getFullYear();setToday(getMonth(monthNumber)+' '+day+' '+year);},30000);// Done every 30 seconds\nreturn function(){return clearInterval(interval);};},[]);return/*#__PURE__*/_jsx(Header2,{children:today});}export default Today;","map":{"version":3,"sources":["/Users/maa48/github-projects/etesam-startpage/src/components/Today.js"],"names":["React","useEffect","useState","styled","Header2","Today","today","setToday","getMonth","index","months","i","length","console","error","d","Date","monthNumber","day","getDate","year","getFullYear","interval","setInterval","clearInterval"],"mappings":"oKAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,OAAT,KAAwB,mBAAxB,C,2CAEA,QAASC,CAAAA,KAAT,EAAiB,eACWH,QAAQ,CAAC,EAAD,CADnB,wCACRI,KADQ,eACDC,QADC,eAGf,QAASC,CAAAA,QAAT,CAAkBC,KAAlB,CAAyB,CACvB,GAAIC,CAAAA,MAAM,CAAG,CACX,SADW,CAEX,UAFW,CAGX,OAHW,CAIX,OAJW,CAKX,KALW,CAMX,MANW,CAOX,MAPW,CAQX,QARW,CASX,WATW,CAUX,SAVW,CAWX,UAXW,CAYX,UAZW,CAAb,CAcA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGD,MAAM,CAACE,MAA3B,CAAmCD,CAAC,EAApC,CAAwC,CACtC,GAAIA,CAAC,GAAKF,KAAV,CAAiB,CACf,MAAOC,CAAAA,MAAM,CAACC,CAAD,CAAb,CACD,CACF,CACDE,OAAO,CAACC,KAAR,CAAc,4BAAd,EACA,OACD,CAEDb,SAAS,CAAC,UAAM,CACd,GAAIc,CAAAA,CAAC,CAAG,GAAIC,CAAAA,IAAJ,EAAR,CACA,GAAIC,CAAAA,WAAW,CAAGF,CAAC,CAACP,QAAF,EAAlB,CACA,GAAIU,CAAAA,GAAG,CAAGH,CAAC,CAACI,OAAF,EAAV,CACA,GAAIC,CAAAA,IAAI,CAAGL,CAAC,CAACM,WAAF,EAAX,CACAd,QAAQ,CAACC,QAAQ,CAACS,WAAD,CAAR,CAAwB,GAAxB,CAA8BC,GAA9B,CAAoC,GAApC,CAA0CE,IAA3C,CAAR,CAEA,GAAME,CAAAA,QAAQ,CAAGC,WAAW,CAAC,UAAM,CACjCR,CAAC,CAAG,GAAIC,CAAAA,IAAJ,EAAJ,CACAC,WAAW,CAAGF,CAAC,CAACP,QAAF,EAAd,CACAU,GAAG,CAAGH,CAAC,CAACI,OAAF,EAAN,CACAC,IAAI,CAAGL,CAAC,CAACM,WAAF,EAAP,CACAd,QAAQ,CAACC,QAAQ,CAACS,WAAD,CAAR,CAAwB,GAAxB,CAA8BC,GAA9B,CAAoC,GAApC,CAA0CE,IAA3C,CAAR,CACD,CAN2B,CAMzB,KANyB,CAA5B,CAMW;AACX,MAAO,kBAAMI,CAAAA,aAAa,CAACF,QAAD,CAAnB,EAAP,CACD,CAfQ,CAeN,EAfM,CAAT,CAiBA,mBAAO,KAAC,OAAD,WAAUhB,KAAV,EAAP,CACD,CAED,cAAeD,CAAAA,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { Header2 } from '../styles/Headers';\n\nfunction Today() {\n  const [today, setToday] = useState('');\n\n  function getMonth(index) {\n    let months = [\n      'January',\n      'February',\n      'March',\n      'April',\n      'May',\n      'June',\n      'July',\n      'August',\n      'September',\n      'October',\n      'November',\n      'December',\n    ];\n    for (let i = 0; i < months.length; i++) {\n      if (i === index) {\n        return months[i];\n      }\n    }\n    console.error('THAT MONTH DOES NOT EXIST!');\n    return;\n  }\n\n  useEffect(() => {\n    let d = new Date();\n    let monthNumber = d.getMonth();\n    let day = d.getDate();\n    let year = d.getFullYear();\n    setToday(getMonth(monthNumber) + ' ' + day + ' ' + year);\n\n    const interval = setInterval(() => {\n      d = new Date();\n      monthNumber = d.getMonth();\n      day = d.getDate();\n      year = d.getFullYear();\n      setToday(getMonth(monthNumber) + ' ' + day + ' ' + year);\n    }, 30000); // Done every 30 seconds\n    return () => clearInterval(interval);\n  }, []);\n\n  return <Header2>{today}</Header2>;\n}\n\nexport default Today;\n"]},"metadata":{},"sourceType":"module"}
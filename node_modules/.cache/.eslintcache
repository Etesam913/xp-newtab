[{"/Users/maa48/github-projects/etesam-startpage/src/index.js":"1","/Users/maa48/github-projects/etesam-startpage/src/App.js":"2","/Users/maa48/github-projects/etesam-startpage/src/styles/Headers.js":"3","/Users/maa48/github-projects/etesam-startpage/src/components/Today.js":"4","/Users/maa48/github-projects/etesam-startpage/src/styles/themeing.js":"5","/Users/maa48/github-projects/etesam-startpage/src/components/SvgMaster.js":"6","/Users/maa48/github-projects/etesam-startpage/src/styles/Layout.js":"7","/Users/maa48/github-projects/etesam-startpage/src/components/Window/index.js":"8","/Users/maa48/github-projects/etesam-startpage/src/components/Menu/index.js":"9","/Users/maa48/github-projects/etesam-startpage/src/data/RenderWindows.js":"10","/Users/maa48/github-projects/etesam-startpage/src/components/Menu/helper.js":"11","/Users/maa48/github-projects/etesam-startpage/src/components/Menu/WindowTitleText.js":"12","/Users/maa48/github-projects/etesam-startpage/src/functions/helpers.js":"13","/Users/maa48/github-projects/etesam-startpage/src/components/SettingsWindow/index.js":"14","/Users/maa48/github-projects/etesam-startpage/src/components/Window/helper.js":"15","/Users/maa48/github-projects/etesam-startpage/src/components/Header/index.js":"16","/Users/maa48/github-projects/etesam-startpage/src/Contexts.js":"17","/Users/maa48/github-projects/etesam-startpage/src/components/SettingsWindow/Tabs.js":"18","/Users/maa48/github-projects/etesam-startpage/src/components/ComponentOptions/index.js":"19"},{"size":219,"mtime":1614673424072,"results":"20","hashOfConfig":"21"},{"size":3743,"mtime":1615619873992,"results":"22","hashOfConfig":"21"},{"size":762,"mtime":1615519625436,"results":"23","hashOfConfig":"21"},{"size":1159,"mtime":1614673424071,"results":"24","hashOfConfig":"21"},{"size":166,"mtime":1613421108372,"results":"25","hashOfConfig":"21"},{"size":568,"mtime":1615408090938,"results":"26","hashOfConfig":"21"},{"size":683,"mtime":1615620017917,"results":"27","hashOfConfig":"21"},{"size":4465,"mtime":1615622949801,"results":"28","hashOfConfig":"21"},{"size":2156,"mtime":1615621739712,"results":"29","hashOfConfig":"21"},{"size":498,"mtime":1615448452648,"results":"30","hashOfConfig":"21"},{"size":873,"mtime":1615622558983,"results":"31","hashOfConfig":"21"},{"size":1960,"mtime":1615623245885,"results":"32","hashOfConfig":"21"},{"size":3064,"mtime":1615620545334,"results":"33","hashOfConfig":"21"},{"size":3108,"mtime":1615529368264,"results":"34","hashOfConfig":"21"},{"size":5607,"mtime":1615622908606,"results":"35","hashOfConfig":"21"},{"size":5603,"mtime":1615621213712,"results":"36","hashOfConfig":"21"},{"size":83,"mtime":1615349710016,"results":"37","hashOfConfig":"21"},{"size":4070,"mtime":1615353293406,"results":"38","hashOfConfig":"21"},{"size":3181,"mtime":1615528562988,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"lxsbxr",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/Users/maa48/github-projects/etesam-startpage/src/index.js",[],["85","86"],"/Users/maa48/github-projects/etesam-startpage/src/App.js",[],"/Users/maa48/github-projects/etesam-startpage/src/styles/Headers.js",[],"/Users/maa48/github-projects/etesam-startpage/src/components/Today.js",["87"],"import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { Header2 } from '../styles/Headers';\n\nfunction Today() {\n  const [today, setToday] = useState('');\n\n  function getMonth(index) {\n    let months = [\n      'January',\n      'February',\n      'March',\n      'April',\n      'May',\n      'June',\n      'July',\n      'August',\n      'September',\n      'October',\n      'November',\n      'December',\n    ];\n    for (let i = 0; i < months.length; i++) {\n      if (i === index) {\n        return months[i];\n      }\n    }\n    console.error('THAT MONTH DOES NOT EXIST!');\n    return;\n  }\n\n  useEffect(() => {\n    let d = new Date();\n    let monthNumber = d.getMonth();\n    let day = d.getDate();\n    let year = d.getFullYear();\n    setToday(getMonth(monthNumber) + ' ' + day + ' ' + year);\n\n    const interval = setInterval(() => {\n      d = new Date();\n      monthNumber = d.getMonth();\n      day = d.getDate();\n      year = d.getFullYear();\n      setToday(getMonth(monthNumber) + ' ' + day + ' ' + year);\n    }, 30000); // Done every 30 seconds\n    return () => clearInterval(interval);\n  }, []);\n\n  return <Header2>{today}</Header2>;\n}\n\nexport default Today;\n",["88","89"],"/Users/maa48/github-projects/etesam-startpage/src/styles/themeing.js",[],["90","91"],"/Users/maa48/github-projects/etesam-startpage/src/components/SvgMaster.js",[],["92","93"],"/Users/maa48/github-projects/etesam-startpage/src/styles/Layout.js",[],"/Users/maa48/github-projects/etesam-startpage/src/components/Window/index.js",["94"],"/Users/maa48/github-projects/etesam-startpage/src/components/Menu/index.js",[],"/Users/maa48/github-projects/etesam-startpage/src/data/RenderWindows.js",[],"/Users/maa48/github-projects/etesam-startpage/src/components/Menu/helper.js",[],"/Users/maa48/github-projects/etesam-startpage/src/components/Menu/WindowTitleText.js",[],"/Users/maa48/github-projects/etesam-startpage/src/functions/helpers.js",[],"/Users/maa48/github-projects/etesam-startpage/src/components/SettingsWindow/index.js",["95","96","97"],"import React, {useState, useEffect, useRef} from 'react'\nimport styled from 'styled-components'\nimport {ColorAndImageTab, InfoTab} from \"./Tabs\";\n\nfunction SettingsWindow({\n                            setIsSettingsShowing,\n                            backgroundColor,\n                            setBackgroundColor,\n                            backgroundImage,\n                            setBackgroundImage\n                        }) {\n    const [currentTab, setCurrentTab] = useState(\"image/color\");\n    const imageInput = useRef(null);\n    const colorInput = useRef(null);\n\n    useEffect(() => {\n        imageInput.current.value = backgroundImage;\n        colorInput.current.value = backgroundColor;\n    }, [imageInput, colorInput])\n\n    useEffect(() => {\n        localStorage.setItem(\"backgroundColor\", backgroundColor);\n        localStorage.setItem(\"backgroundImage\", backgroundImage);\n    }, [backgroundColor, backgroundImage]);\n\n    return (\n        <div>\n            <Window className={'window'}>\n                <div className='title-bar'>\n                    <div className='title-bar-text'> Settings</div>\n                    <div className='title-bar-controls'>\n                        <button aria-label='Close' onClick={() => {\n                            setIsSettingsShowing(false)\n                        }}/>\n                    </div>\n                </div>\n                <div className=\"window-body\">\n                    <menu role=\"tablist\">\n                        <button aria-selected={currentTab === \"image/color\"} aria-controls=\"color\" onClick={() => {\n                            setCurrentTab(\"image/color\")\n                        }}>Image/Color\n                        </button>\n                        <button aria-selected={currentTab === \"info\"} onClick={() => {\n                            setCurrentTab(\"info\")\n                        }} aria-controls=\"info\">Info\n                        </button>\n                    </menu>\n\n                    {currentTab === 'image/color' &&\n                    <ColorAndImageTab\n                        imageInput={imageInput}\n                        colorInput={colorInput}\n                        backgroundColor={backgroundColor}\n                        setBackgroundColor={setBackgroundColor}\n                        backgroundImage={backgroundImage}\n                        setBackgroundImage={setBackgroundImage}\n                    />}\n\n                    {currentTab === 'info' && <InfoTab/>}\n                </div>\n            </Window>\n            <GrayShade onClick={() => {\n                setIsSettingsShowing(false)\n            }}/>\n        </div>\n    );\n}\n\nconst Window = styled.div`\n  width: 37rem;\n  height: auto;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  font-family: 'Pixelated MS Sans Serif', 'Arial', serif;\n  z-index: 2;\n  @media only screen and (max-width: 768px) {\n    width: 80% !important;\n  }\n`\nconst GrayShade = styled.div`\n  position: absolute;\n  height: 100vh;\n  width: 100vw;\n  background: rgba(0, 0, 0, 0.5);\n  z-index: 2;\n`;\n\nexport default SettingsWindow","/Users/maa48/github-projects/etesam-startpage/src/components/Window/helper.js",[],"/Users/maa48/github-projects/etesam-startpage/src/components/Header/index.js",["98","99"],"import React, {useContext, useState, useRef} from 'react'\nimport styled from 'styled-components';\nimport {Header1} from \"../../styles/Headers\";\nimport {convertJustifyContentToTextAlign, getSelectionText, getDesiredItem} from \"../../functions/helpers\";\nimport {AppContext} from \"../../Contexts\";\nimport {FlexContainer} from \"../../styles/Layout\";\nimport {TextAlignOptions, LinkOptions} from \"../ComponentOptions\";\nimport {changeItemProperty} from \"../Window/helper\";\n\n\nfunction Header({windowItem, item}) {\n    const {windowData, setWindowData, isMenuShowing} = useContext(AppContext);\n    const [isTextSelected, setIsTextSelected] = useState(false);\n    const [showLinkInput, setShowLinkInput] = useState(false);\n    const [selectionObj, setSelectionObj] = useState(null);\n    const header = useRef(null);\n\n    function createLink(e) {\n        // Can only select if nothing is currently selected.\n        if (getSelectionText() !== \"\" && document.getElementsByClassName(\"selected\").length === 0) {\n            const selection = window.getSelection();\n            const range = selection.getRangeAt(0);\n            const parentTag = range.commonAncestorContainer.parentElement.tagName\n\n            // Selection styling should only occur when the selection is not already in an a tag.\n            if (parentTag !== \"A\") {\n                setIsTextSelected(true)\n                setSelectionObj(selection)\n            } else {\n                setIsTextSelected(false)\n                setShowLinkInput(false)\n            }\n        } else {\n            setIsTextSelected(false);\n            setShowLinkInput(false);\n            // Removes the selection class if it exists\n            const selectedElem = document.getElementsByClassName(\"selected\")[0]\n            if (selectedElem) {\n                const itemToReplaceWith = document.createTextNode(selectedElem.textContent);\n                const parent = selectedElem.parentNode;\n                parent.replaceChild(itemToReplaceWith, selectedElem);\n            }\n        }\n    }\n\n\n    function handleOptions() {\n        if (isMenuShowing) {\n            if (isTextSelected) {\n                return (\n                    <LinkOptions\n                        isTextSelected={isTextSelected}\n                        setIsTextSelected={setIsTextSelected}\n                        selectionObj={selectionObj}\n                        header={header}\n                        showLinkInput={showLinkInput}\n                        setShowLinkInput={setShowLinkInput}\n                    />)\n            } else {\n                return <TextAlignOptions item={item} windowItem={windowItem}/>\n            }\n        }\n    }\n\n    function getCaretPosition(parent, cursorNode, relativeCurPosition) {\n        const children = parent.childNodes;\n        let currentLength = 0;\n        for (let i = 0; i < children.length; i++) {\n            if (children[i] === cursorNode) {\n                return currentLength + relativeCurPosition\n            }\n            currentLength += children[i].textContent.length;\n        }\n    }\n\n    function handleKeyDown(e) {\n        if (e.keyCode === 13) {\n            e.preventDefault();\n        } else {\n            setIsTextSelected(false)\n        }\n    }\n\n    function handleDelete(windowData, id) {\n        const currentWindow = getDesiredItem(windowData, id);\n        const tempItem = {...windowItem};\n        tempItem[\"items\"] = tempItem[\"items\"].filter(item => item.id !== id);\n\n\n    }\n\n    return (\n        <div>\n            <FlexContainer margin={isMenuShowing ? '0 0 .5rem 0' : '0'}>\n                {handleOptions()}\n            </FlexContainer>\n            <FlexContainer>\n                <HeaderComponent\n                    isMenuShowing={isMenuShowing}\n                    ref={header}\n                    tabIndex={0}\n                    onKeyDown={(e) => {\n                        handleKeyDown(e)\n                    }}\n                    key={\"header-\" + windowItem[\"id\"] + \"-\" + item[\"id\"]}\n                    as={Header1}\n                    contentEditable={isMenuShowing ? 'true' : 'false'}\n                    width={'100%'}\n                    background={isMenuShowing ? 'white' : 'transparent'}\n                    border={isMenuShowing ? '1px solid #cccccc' : \"0px\"}\n                    onClick={(e) => {\n                        createLink(e)\n                    }}\n                    onBlur={() => {\n                        changeItemProperty(\n                            windowItem,\n                            windowData,\n                            setWindowData,\n                            item,\n                            \"text\",\n                            header.current.innerText\n                        )\n                    }}\n                    textAlign={convertJustifyContentToTextAlign(item[\"justifyContent\"])}\n                    margin={'0'}\n                    suppressContentEditableWarning={true}\n                >\n                    <p>{item[\"text\"]}</p>\n                </HeaderComponent>\n                {isMenuShowing && <DeleteButton onClick={() => {\n                    handleDelete(windowData, item[\"id\"])\n                }}> Delete </DeleteButton>}\n\n            </FlexContainer>\n\n        </div>\n    )\n}\n\nconst HeaderComponent = styled.input`\n  :hover {\n    outline: ${props => !props.isMenuShowing && '0px'};\n  }\n\n  p::selection {\n    background-color: #2267cb;\n    color: white;\n  }\n\n  margin-right: 0.4rem;\n  word-wrap: break-word;\n  width: 81.8%;\n`;\n\nconst DeleteButton = styled.button`\n  min-width: 55px;\n  padding: 0 6px;\n  text-align: center;\n`;\n\nexport default Header","/Users/maa48/github-projects/etesam-startpage/src/Contexts.js",[],"/Users/maa48/github-projects/etesam-startpage/src/components/SettingsWindow/Tabs.js",[],"/Users/maa48/github-projects/etesam-startpage/src/components/ComponentOptions/index.js",[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":2,"column":8,"nodeType":"106","messageId":"107","endLine":2,"endColumn":14},{"ruleId":"100","replacedBy":"108"},{"ruleId":"102","replacedBy":"109"},{"ruleId":"100","replacedBy":"110"},{"ruleId":"102","replacedBy":"111"},{"ruleId":"100","replacedBy":"112"},{"ruleId":"102","replacedBy":"113"},{"ruleId":"104","severity":1,"message":"114","line":8,"column":5,"nodeType":"106","messageId":"107","endLine":8,"endColumn":22},{"ruleId":"115","severity":1,"message":"116","line":19,"column":8,"nodeType":"117","endLine":19,"endColumn":32,"suggestions":"118"},{"ruleId":"119","severity":1,"message":"120","line":39,"column":25,"nodeType":"121","endLine":41,"endColumn":28},{"ruleId":"119","severity":1,"message":"120","line":43,"column":25,"nodeType":"121","endLine":45,"endColumn":49},{"ruleId":"104","severity":1,"message":"122","line":65,"column":14,"nodeType":"106","messageId":"107","endLine":65,"endColumn":30},{"ruleId":"104","severity":1,"message":"123","line":85,"column":13,"nodeType":"106","messageId":"107","endLine":85,"endColumn":26},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"no-unused-vars","'styled' is defined but never used.","Identifier","unusedVar",["124"],["125"],["124"],["125"],["124"],["125"],"'updateWindowTitle' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'backgroundColor' and 'backgroundImage'. Either include them or remove the dependency array.","ArrayExpression",["126"],"jsx-a11y/role-supports-aria-props","The attribute aria-selected is not supported by the role button. This role is implicit on the element button.","JSXOpeningElement","'getCaretPosition' is defined but never used.","'currentWindow' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},"Update the dependencies array to be: [imageInput, colorInput, backgroundImage, backgroundColor]",{"range":"129","text":"130"},[710,734],"[imageInput, colorInput, backgroundImage, backgroundColor]"]
[{"/Users/maa48/github-projects/etesam-startpage/src/index.js":"1","/Users/maa48/github-projects/etesam-startpage/src/App.js":"2","/Users/maa48/github-projects/etesam-startpage/src/styles/Headers.js":"3","/Users/maa48/github-projects/etesam-startpage/src/components/Today.js":"4","/Users/maa48/github-projects/etesam-startpage/src/components/SvgMaster.js":"5","/Users/maa48/github-projects/etesam-startpage/src/styles/Layout.js":"6","/Users/maa48/github-projects/etesam-startpage/src/components/Window/index.js":"7","/Users/maa48/github-projects/etesam-startpage/src/components/Menu/index.js":"8","/Users/maa48/github-projects/etesam-startpage/src/data/RenderWindows.js":"9","/Users/maa48/github-projects/etesam-startpage/src/components/Menu/helper.js":"10","/Users/maa48/github-projects/etesam-startpage/src/components/Menu/WindowTitleText.js":"11","/Users/maa48/github-projects/etesam-startpage/src/functions/helpers.js":"12","/Users/maa48/github-projects/etesam-startpage/src/components/SettingsWindow/index.js":"13","/Users/maa48/github-projects/etesam-startpage/src/components/Window/helper.js":"14","/Users/maa48/github-projects/etesam-startpage/src/Contexts.js":"15","/Users/maa48/github-projects/etesam-startpage/src/components/SettingsWindow/Tabs.js":"16","/Users/maa48/github-projects/etesam-startpage/src/components/Header/index.js":"17","/Users/maa48/github-projects/etesam-startpage/src/components/ComponentOptions/index.js":"18","/Users/maa48/github-projects/etesam-startpage/src/components/Image/index.js":"19","/Users/maa48/github-projects/etesam-startpage/src/styles/StyledComponents.js":"20","/Users/maa48/github-projects/etesam-startpage/src/components/BackButton/index.js":"21","/Users/maa48/github-projects/etesam-startpage/src/components/Video/index.js":"22","/Users/maa48/github-projects/etesam-startpage/src/data/RenderIcons.js":"23","/Users/maa48/github-projects/etesam-startpage/src/components/Startbar/index.js":"24","/Users/maa48/github-projects/etesam-startpage/src/components/Icon/index.js":"25","/Users/maa48/github-projects/etesam-startpage/src/components/Startbar/items.js":"26","/Users/maa48/github-projects/etesam-startpage/src/components/Startbar/styles.js":"27","/Users/maa48/github-projects/etesam-startpage/src/components/Toggle/index.js":"28","/Users/maa48/github-projects/etesam-startpage/src/styles/theme.js":"29","/Users/maa48/github-projects/etesam-startpage/src/components/List/index.js":"30","/Users/maa48/github-projects/etesam-startpage/src/components/DragIndicator/index.js":"31"},{"size":219,"mtime":1614673424072,"results":"32","hashOfConfig":"33"},{"size":2903,"mtime":1619906141178,"results":"34","hashOfConfig":"33"},{"size":762,"mtime":1615676880073,"results":"35","hashOfConfig":"33"},{"size":1159,"mtime":1614673424071,"results":"36","hashOfConfig":"33"},{"size":568,"mtime":1615408090938,"results":"37","hashOfConfig":"33"},{"size":649,"mtime":1619473203961,"results":"38","hashOfConfig":"33"},{"size":5311,"mtime":1620003311227,"results":"39","hashOfConfig":"33"},{"size":1867,"mtime":1619473203949,"results":"40","hashOfConfig":"33"},{"size":459,"mtime":1619473203954,"results":"41","hashOfConfig":"33"},{"size":674,"mtime":1619473203949,"results":"42","hashOfConfig":"33"},{"size":1749,"mtime":1619473203948,"results":"43","hashOfConfig":"33"},{"size":5053,"mtime":1619998687499,"results":"44","hashOfConfig":"33"},{"size":2227,"mtime":1619564932234,"results":"45","hashOfConfig":"33"},{"size":7817,"mtime":1620003311229,"results":"46","hashOfConfig":"33"},{"size":131,"mtime":1619758849725,"results":"47","hashOfConfig":"33"},{"size":5275,"mtime":1619899232838,"results":"48","hashOfConfig":"33"},{"size":5427,"mtime":1619932184193,"results":"49","hashOfConfig":"33"},{"size":3359,"mtime":1619912272975,"results":"50","hashOfConfig":"33"},{"size":5908,"mtime":1620003824152,"results":"51","hashOfConfig":"33"},{"size":356,"mtime":1616110124268,"results":"52","hashOfConfig":"33"},{"size":786,"mtime":1619473203946,"results":"53","hashOfConfig":"33"},{"size":3024,"mtime":1619909514427,"results":"54","hashOfConfig":"33"},{"size":451,"mtime":1619997757959,"results":"55","hashOfConfig":"33"},{"size":3617,"mtime":1619843803219,"results":"56","hashOfConfig":"33"},{"size":4003,"mtime":1619997757956,"results":"57","hashOfConfig":"33"},{"size":2010,"mtime":1619502118060,"results":"58","hashOfConfig":"33"},{"size":3800,"mtime":1619900283080,"results":"59","hashOfConfig":"33"},{"size":1036,"mtime":1619553265179,"results":"60","hashOfConfig":"33"},{"size":615,"mtime":1619557879992,"results":"61","hashOfConfig":"33"},{"size":6188,"mtime":1619927350760,"results":"62","hashOfConfig":"33"},{"size":1901,"mtime":1620002947833,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"lxsbxr",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"66"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"66"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"66"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"66"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"/Users/maa48/github-projects/etesam-startpage/src/index.js",[],["139","140"],"/Users/maa48/github-projects/etesam-startpage/src/App.js",[],"/Users/maa48/github-projects/etesam-startpage/src/styles/Headers.js",[],"/Users/maa48/github-projects/etesam-startpage/src/components/Today.js",["141"],"import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { Header2 } from '../styles/Headers';\n\nfunction Today() {\n  const [today, setToday] = useState('');\n\n  function getMonth(index) {\n    let months = [\n      'January',\n      'February',\n      'March',\n      'April',\n      'May',\n      'June',\n      'July',\n      'August',\n      'September',\n      'October',\n      'November',\n      'December',\n    ];\n    for (let i = 0; i < months.length; i++) {\n      if (i === index) {\n        return months[i];\n      }\n    }\n    console.error('THAT MONTH DOES NOT EXIST!');\n    return;\n  }\n\n  useEffect(() => {\n    let d = new Date();\n    let monthNumber = d.getMonth();\n    let day = d.getDate();\n    let year = d.getFullYear();\n    setToday(getMonth(monthNumber) + ' ' + day + ' ' + year);\n\n    const interval = setInterval(() => {\n      d = new Date();\n      monthNumber = d.getMonth();\n      day = d.getDate();\n      year = d.getFullYear();\n      setToday(getMonth(monthNumber) + ' ' + day + ' ' + year);\n    }, 30000); // Done every 30 seconds\n    return () => clearInterval(interval);\n  }, []);\n\n  return <Header2>{today}</Header2>;\n}\n\nexport default Today;\n",["142","143"],"/Users/maa48/github-projects/etesam-startpage/src/components/SvgMaster.js",[],["144","145"],"/Users/maa48/github-projects/etesam-startpage/src/styles/Layout.js",[],"/Users/maa48/github-projects/etesam-startpage/src/components/Window/index.js",[],"/Users/maa48/github-projects/etesam-startpage/src/components/Menu/index.js",[],"/Users/maa48/github-projects/etesam-startpage/src/data/RenderWindows.js",[],"/Users/maa48/github-projects/etesam-startpage/src/components/Menu/helper.js",[],"/Users/maa48/github-projects/etesam-startpage/src/components/Menu/WindowTitleText.js",[],"/Users/maa48/github-projects/etesam-startpage/src/functions/helpers.js",[],"/Users/maa48/github-projects/etesam-startpage/src/components/SettingsWindow/index.js",["146","147"],"import React, { useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { ColorAndImageTab, InfoTab, MiscTab } from \"./Tabs\";\n\nfunction SettingsWindow(\n  {\n    setIsSettingsShowing,\n    settingsData\n  }) {\n  const [currentTab, setCurrentTab] = useState(\"Appearance\");\n  const imageInput = useRef(null);\n  const colorInput = useRef(null);\n\n  useEffect(() => {\n    imageInput.current.value = settingsData[\"backgroundImage\"];\n    colorInput.current.value = settingsData[\"backgroundColor\"];\n  }, [imageInput, colorInput]);\n\n  const tabData = [\"Appearance\", \"Miscellaneous\", \"Information\"];\n  const tabs = tabData.map((tab, index) => {\n    return (\n      <button\n        key={`tab-${index}`}\n        aria-selected={currentTab === tab}\n        onClick={() => {\n          setCurrentTab(tab);\n        }}\n        aria-controls={tab}\n      >\n        {tab}\n      </button>\n    );\n  });\n\n  return (\n    <div>\n      <Window className={\"window\"}>\n        <div className=\"title-bar\">\n          <div className=\"title-bar-text\"> Settings</div>\n          <div className=\"title-bar-controls\">\n            <button aria-label=\"Close\" onClick={() => {\n              setIsSettingsShowing(false);\n            }} />\n          </div>\n        </div>\n        <div className=\"window-body\">\n          <menu role=\"tablist\">\n            {tabs}\n          </menu>\n\n          {currentTab === \"Appearance\" &&\n          <ColorAndImageTab\n            imageInput={imageInput}\n            colorInput={colorInput}\n          />}\n\n          {currentTab === \"Information\" && <InfoTab />}\n          {currentTab === \"Miscellaneous\" && <MiscTab />}\n        </div>\n      </Window>\n      <GrayShade onClick={() => {\n        setIsSettingsShowing(false);\n      }} />\n    </div>\n  );\n}\n\nconst Window = styled.div`\n  width: 37rem;\n  height: auto;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  font-family: ${props => props.theme.fonts.primary};\n  z-index: 6;\n  @media only screen and (max-width: 768px) {\n    width: 80% !important;\n  }\n`;\nconst GrayShade = styled.div`\n  position: absolute;\n  height: 100vh;\n  width: 100vw;\n  background: rgba(0, 0, 0, 0.5);\n  z-index: 5;\n`;\n\nexport default SettingsWindow;","/Users/maa48/github-projects/etesam-startpage/src/components/Window/helper.js",["148","149"],"import React, { useContext, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { sortableContainer, sortableElement, sortableHandle } from \"react-sortable-hoc\";\nimport Header from \"../Header\";\nimport { getTranslateXY, replaceDesiredWindowItem } from \"../../functions/helpers\";\nimport Image from \"../Image\";\nimport { AppContext } from \"../../Contexts\";\nimport Video from \"../Video\";\nimport List from \"../List\";\nimport DragIndicator from \"../DragIndicator\";\nimport arrayMove from \"array-move\";\n\n\nexport function handleComponentCreation(refToSearch, windowData, setWindowData, windowItem) {\n  const selectedComponent = getSelectedComponent(refToSearch);\n  addComponent(selectedComponent, windowData, setWindowData, windowItem);\n}\n\nexport function addComponent(componentToAdd, windowData, setWindowData, windowItem) {\n  let newItem = { ...windowItem };\n  let tempData = [...windowData];\n  let maxId = -1;\n  for (let i = 0; i < newItem['items'].length; i++) {\n    if (newItem[\"items\"][i][\"id\"] > maxId)\n      maxId = newItem[\"items\"][i][\"id\"];\n  }\n  if (componentToAdd === \"Header\") {\n    newItem[\"items\"].push({\n      id: maxId + 1,\n      componentName: \"Header\",\n      html: \"<p>Header Text</p>\",\n      justifyContent: \"flex-start\"\n    });\n  } else if (componentToAdd === \"Image\") {\n    newItem[\"items\"].push({\n      id: maxId + 1,\n      componentName: \"Image\",\n      href: null,\n      src: \"https://via.placeholder.com/300x175\",\n      justifyContent: \"flex-start\"\n    });\n  } else if (componentToAdd === \"Video\") {\n    newItem[\"items\"].push({\n      id: maxId + 1,\n      componentName: \"Video\",\n      src: \"https://www.youtube.com/embed/5pzM_pFNWak\"\n    });\n  } else if (componentToAdd === \"List\") {\n    newItem[\"items\"].push({\n      id: maxId + 1,\n      componentName: \"List\",\n      children: [\n        {\n          id: 0,\n          html:\n            \"<li contenteditable=\\\"true\\\" class=\\\"list-item\\\">first child</li>\" +\n            \"<div class='list-item-options show'>\" +\n            \"<button class='list-delete-button'>Delete</button>\" +\n            \"<button class='list-strikethrough-button'>Strikethrough</button>\" +\n            \"</div>\"\n        }\n      ]\n    });\n  }\n  replaceDesiredWindowItem(tempData, newItem);\n  setWindowData(tempData);\n}\n\nconst DragHandle = sortableHandle(() => <DragIndicator />);\n\nconst SortableItem = sortableElement(({ children }) => <ComponentItem><DragHandle />{children}</ComponentItem>);\n\nconst SortableContainer = sortableContainer(({ children }) => {\n  return <ComponentList>{children}</ComponentList>;\n});\n\nexport function RenderComponents(componentsArr, windowObj, moveCursor, autoCursor) {\n  const { isEditModeOn, windowData, setWindowData } = useContext(AppContext);\n\n  const components = componentsArr.map((windowItem, index) => {\n    function getComponent() {\n      if (windowItem[\"componentName\"] === \"Header\") {\n        return (\n          <Header windowItem={windowItem} windowObj={windowObj} />\n        );\n      } else if (windowItem[\"componentName\"] === \"Image\") {\n        return (\n          <Image windowItem={windowItem} windowObj={windowObj} />\n        );\n      } else if (windowItem[\"componentName\"] === \"Video\") {\n        return (\n          <Video windowItem={windowItem} windowObj={windowObj} />\n        );\n      } else if (windowItem[\"componentName\"] === \"List\") {\n        return (\n          <List windowItem={windowItem} windowObj={windowObj} />\n        );\n      }\n    }\n\n    return (\n      <SortableItem key={\"item-\" + windowObj[\"id\"] + \"-\" + index} index={index}>\n        {getComponent()}\n      </SortableItem>\n\n    );\n  });\n\n  const onSortEnd = ({ oldIndex, newIndex }) => {\n    let tempComponentsArr = [...componentsArr];\n    tempComponentsArr = arrayMove(tempComponentsArr, oldIndex, newIndex);\n    let tempWindowObj = { ...windowObj };\n    tempWindowObj[\"items\"] = tempComponentsArr;\n    let tempWindowData = [...windowData];\n    replaceDesiredWindowItem(tempWindowData, tempWindowObj);\n    setWindowData(tempWindowData);\n    document.body.style.cursor = autoCursor\n    /*this.setState(({items}) => ({\n      items: arrayMove(items, oldIndex, newIndex),\n    }));*/\n  };\n\n  return (\n    <SortableContainer useDragHandle onSortEnd={onSortEnd} onSortMove={()=>{document.body.style.cursor = moveCursor}}>\n      {components}\n    </SortableContainer>\n  );\n}\n\nconst ComponentList = styled.ul`\n  list-style-type: none;\n  padding: 0;\n  margin: 0;\n`;\n\nconst ComponentItem = styled.li`\n  padding: 0.25rem 0;\n  z-index: 5;\n  list-style-type: none;\n  font-family: ${props=>props.theme.fonts.primary};\n`;\n\n// For radio buttons\nexport function getSelectedComponent(componentsParent) {\n  const components = componentsParent.current.children;\n  // Starts at 1 to skip the \"Select One\" text. Ends at components.length-1 to skip the add component button\n  for (let i = 1; i < components.length - 1; i++) {\n    const currentComponent = components[i];\n    const componentChildren = currentComponent.children;\n    const radioInput = componentChildren[0];\n    const radioLabel = componentChildren[1];\n    if (radioInput.checked) {\n      return radioLabel.innerText;\n    }\n  }\n  return null;\n}\n\nexport function setDataProperty(\n  data,\n  setData,\n  item,\n  propertyName,\n  propertyValue\n) {\n  const tempData = [...data];\n  const itemToInsert = { ...item };\n  if (propertyName === \"position\") {\n    // Property value is the window ref in this case\n    const positions = getTranslateXY(propertyValue.current);\n    const xPos = positions[\"translateX\"];\n    const yPos = positions[\"translateY\"];\n    itemToInsert[\"xCoord\"] = xPos;\n    itemToInsert[\"yCoord\"] = yPos;\n  } else {\n    itemToInsert[propertyName] = propertyValue;\n  }\n\n  replaceDesiredWindowItem(tempData, itemToInsert);\n  setData(tempData);\n  return tempData;\n}\n\nexport function changeItemProperty(windowObj, windowData, setWindowData, windowItem, propertyName, propertyValue) {\n  /*const windowId = windowItem[\"id\"];*/\n  let tempWindowData = [...windowData];\n  // Gets the current window\n  /*let desiredWindow = getDesiredItem(windowData, windowId);*/\n  let tempWindow = { ...windowObj };\n  let items = tempWindow[\"items\"];\n  // Gets the current item\n  /*let desiredItem = getDesiredItem(items, item[\"id\"]);*/\n  let tempWindowItem = { ...windowItem };\n  tempWindowItem[propertyName] = propertyValue;\n  replaceDesiredWindowItem(items, tempWindowItem);\n  replaceDesiredWindowItem(tempWindowData, tempWindow);\n  setWindowData(tempWindowData);\n}\n\n// Good for adding selection class, bolding, underlining, etc..\nfunction replaceSelectionWithNode(node) {\n  let range, html;\n  if (window.getSelection && window.getSelection().getRangeAt) {\n    range = window.getSelection().getRangeAt(0);\n    range.deleteContents();\n    range.insertNode(node);\n  } else if (document.selection && document.selection.createRange) {\n    range = document.selection.createRange();\n    html = (node.nodeType === 3) ? node.data : node.outerHTML;\n    range.pasteHTML(html);\n  }\n}\n\nexport function highlightText(selection) {\n  if (selection) {\n    let elem = document.createElement(\"span\");\n    elem.className = \"selected\";\n    elem.appendChild(document.createTextNode(selection));\n\n    /*const htmlToInsert = '<span class=\"selected\">' + selection + '</span>';\n    const text = header.current.innerHTML;*/\n    const range = selection.getRangeAt(0);\n    const parent = range.commonAncestorContainer;\n    const grandParent = parent.parentElement;\n    if (grandParent.tagName !== \"A\") {\n      replaceSelectionWithNode(elem);\n    }\n  }\n}\n\n// For deleting an item\nexport function handleDelete(windowData, setWindowData, windowItem, id) {\n  const tempItem = { ...windowItem };\n  tempItem[\"items\"] = tempItem[\"items\"].filter(item => item.id !== id);\n  setDataProperty(windowData, setWindowData, windowItem, \"items\", tempItem[\"items\"]);\n}\n\n\n","/Users/maa48/github-projects/etesam-startpage/src/Contexts.js",[],"/Users/maa48/github-projects/etesam-startpage/src/components/SettingsWindow/Tabs.js",["150"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { Header1 } from \"../../styles/Headers\";\nimport { FlexContainer } from \"../../styles/Layout\";\nimport { HexColorPicker } from \"react-colorful\";\nimport styled from \"styled-components\";\nimport { AppContext } from \"../../Contexts\";\nimport { updateSetting } from \"../../functions/helpers\";\n\n\nexport function ColorAndImageTab({ imageInput, colorInput }) {\n  const { settingsData, setSettingsData } = useContext(AppContext);\n  const [color, setColor] = useState(settingsData[\"backgroundColor\"]);\n\n  function handleColorInputEnter(e) {\n    if (e.keyCode === 13) {\n      updateSetting(\n        settingsData,\n        setSettingsData,\n        \"backgroundColor\",\n        e.target.value\n      );\n    }\n  }\n\n  function handleImageInputEnter(e) {\n    if (e.keyCode === 13) {\n      updateSetting(\n        settingsData,\n        setSettingsData,\n        \"backgroundImage\",\n        e.target.value\n      );\n    }\n  }\n\n  function handleKeyDown(e) {\n    // Do not allow open and closed parenthesis\n    if (e.which === 40 || e.which === 41) {\n      e.preventDefault();\n    }\n  }\n\n  useEffect(() => {\n    updateSetting(\n      settingsData,\n      setSettingsData,\n      \"backgroundColor\",\n      color\n    );\n  }, [color]);\n\n  return (\n    <article role=\"tabpanel\">\n      <Header1 margin={\"1rem 0 1rem\"}>Change Background Image</Header1>\n      <FlexContainer justifyContent={\"flex-start\"} alignItems={\"flex-start\"} tablet>\n        <TabInput\n          ref={imageInput}\n          defaultValue={settingsData[\"backgroundImage\"]}\n          placeholder={\"Enter Image Url\"}\n          width={\"70%\"}\n          onKeyDown={(e) => {\n            handleImageInputEnter(e);\n          }} />\n        <FlexContainer flexDirection=\"column\" alignItems={\"flex-start\"}>\n          <button\n            onClick={() => {\n              updateSetting(\n                settingsData,\n                setSettingsData,\n                \"backgroundImage\",\n                imageInput.current.value\n              );\n            }}\n          >\n            Set Image\n          </button>\n          <RemoveButton\n            onClick={() => {\n              updateSetting(\n                settingsData,\n                setSettingsData,\n                \"backgroundImage\",\n                \"\"\n              );\n            }}\n          >\n            Remove Image\n          </RemoveButton>\n        </FlexContainer>\n\n      </FlexContainer>\n\n      <Header1 margin={\"1.5rem 0 1rem\"}>Change Background Color</Header1>\n      <FlexContainer tablet justifyContent={\"flex-start\"} alignItems={\"flex-start\"}>\n        <TabInput\n          placeholder={\"Enter Hex Color Code\"}\n          ref={colorInput}\n          value={settingsData[\"backgroundColor\"]}\n          onKeyPress={(e) => {\n            handleKeyDown(e);\n          }}\n          onChange={(e) => {\n            setColor(e.target.value + \"\");\n          }}\n          onKeyDown={(e) => {\n            handleColorInputEnter(e);\n          }}\n        />\n        <HexColorPicker color={color} onChange={setColor} />\n      </FlexContainer>\n\n    </article>\n  );\n}\n\nconst TabInput = styled.input`\n  margin-right: 1rem;\n  width: ${props => props.width};\n  @media only screen and (max-width: 768px) {\n    margin-bottom: 1rem;\n    width: 80%;\n  }\n`;\nconst RemoveButton = styled.button`\n  margin-top: 0.5rem;\n`;\n\nexport function InfoTab() {\n  return (\n    <article role=\"tabpanel\">\n      <Header1 margin={\"0 0 1rem\"}>Windows XP New Tab</Header1>\n      <InfoParagraph>This extension was created by Etesam Ansari using React.js, Styled Components, and the XP.css\n        GitHub repo.</InfoParagraph>\n      <InfoGrid>\n        <p style={{ marginRight: \"0.5rem\" }}>GitHub Link: </p>\n        <a href={\"https://github.com/Etesam913/xp-newtab\"}>\n          https://github.com/Etesam913/xp-newtab\n        </a>\n\n        <p style={{ marginRight: \"0.5rem\" }}>Firefox Addon Link: </p>\n        <a href={\"https://github.com/Etesam913/windowsxp-newtab\"}>\n          https://github.com/Etesam913/xp-newtab\n        </a>\n\n        <p style={{ marginRight: \"0.5rem\" }}>Chrome Addon Link: </p>\n        <a href={\"https://github.com/Etesam913/windowsxp-newtab\"}>\n          https://github.com/Etesam913/xp-newtab\n        </a>\n      </InfoGrid>\n    </article>\n  );\n}\n\nconst InfoGrid = styled.div`\n  margin-top: 0.45rem;\n  display: inline-grid;\n  grid-template-columns: auto auto;\n  grid-auto-rows: auto auto auto;\n  align-self: center;\n  row-gap: .75rem;\n  @media only screen and (max-width: 768px) {\n    grid-template-columns: auto;\n  }\n`;\n\nconst InfoParagraph = styled.p`\n  margin: 0.5rem 0;\n  font-size: 1.1em;\n`;\n\n// Allows user to set settings such as grid, icon size\nexport function MiscTab() {\n  const { settingsData, setSettingsData } = useContext(AppContext);\n\n  return (\n    <article role=\"tabpanel\">\n      <Header1>Change Dragging Grid</Header1>\n      <select\n        onChange={(e) => {\n          updateSetting(\n            settingsData,\n            setSettingsData,\n            \"draggingGrid\",\n            e.target.value\n          );\n        }}\n        defaultValue={settingsData[\"draggingGrid\"]}\n      >\n        <option>0px</option>\n        <option>15px</option>\n        <option>30px</option>\n        <option>45px</option>\n      </select>\n    </article>\n  );\n}\n\n","/Users/maa48/github-projects/etesam-startpage/src/components/Header/index.js",["151"],"import React, { useContext, useEffect, useState, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { Header1 } from \"../../styles/Headers\";\nimport { convertJustifyContentToTextAlign, getSelectionText } from \"../../functions/helpers\";\nimport { AppContext } from \"../../Contexts\";\nimport { FlexContainer } from \"../../styles/Layout\";\nimport { TextAlignOptions, LinkOptions } from \"../ComponentOptions\";\nimport { changeItemProperty, handleDelete } from \"../Window/helper\";\nimport { DeleteButton } from \"../../styles/StyledComponents\";\nimport DragIndicator from \"../DragIndicator\";\n\n\nfunction Header({ windowObj, windowItem, }) {\n  const { windowData, setWindowData, isEditModeOn } = useContext(AppContext);\n  const [isTextSelected, setIsTextSelected] = useState(false);\n  const [showLinkInput, setShowLinkInput] = useState(false);\n  const [selectionObj, setSelectionObj] = useState(null);\n  const [cursorInHeader, setCursorInHeader] = useState(false)\n\n  const header = useRef(null);\n\n  useEffect(() => {\n    header.current.innerHTML = windowItem[\"html\"];\n  }, [header, windowItem]);\n\n  useEffect(()=>{\n    console.log(cursorInHeader)\n  }, [cursorInHeader])\n\n  function createLink() {\n    // Can only select if nothing is currently selected.\n    if (getSelectionText() !== \"\" && document.getElementsByClassName(\"selected\").length === 0) {\n      console.log('good')\n      const selection = window.getSelection();\n      const range = selection.getRangeAt(0);\n      const parentTag = range.commonAncestorContainer.parentElement.tagName;\n\n      // Selection styling should only occur when the selection is not already in an a tag.\n      if (parentTag !== \"A\") {\n        setIsTextSelected(true);\n        setSelectionObj(selection);\n      } else {\n        setIsTextSelected(false);\n        setShowLinkInput(false);\n      }\n    } else {\n      setIsTextSelected(false);\n      setShowLinkInput(false);\n      // Removes the selection class if it exists\n      const selectedElem = document.getElementsByClassName(\"selected\")[0];\n      if (selectedElem) {\n        const itemToReplaceWith = document.createTextNode(selectedElem.textContent);\n        const parent = selectedElem.parentNode;\n        parent.replaceChild(itemToReplaceWith, selectedElem);\n      }\n    }\n  }\n\n\n  function handleOptions() {\n    if (isEditModeOn) {\n      if (isTextSelected) {\n        return (\n          <LinkOptions\n            isTextSelected={isTextSelected}\n            setIsTextSelected={setIsTextSelected}\n            selectionObj={selectionObj}\n            componentRef={header}\n            showLinkInput={showLinkInput}\n            setShowLinkInput={setShowLinkInput}\n            windowObj={windowObj}\n            windowItem={windowItem}\n          />);\n      } else {\n        return <TextAlignOptions text windowItem={windowItem} windowObj={windowObj} />;\n      }\n    }\n  }\n\n  /*\n    function getCaretPosition(parent, cursorNode, relativeCurPosition) {\n      const children = parent.childNodes;\n      let currentLength = 0;\n      for (let i = 0; i < children.length; i++) {\n        if (children[i] === cursorNode) {\n          return currentLength + relativeCurPosition;\n        }\n        currentLength += children[i].textContent.length;\n      }\n    }\n  */\n\n  function handleKeyDown(e) {\n    if (e.keyCode === 13) {\n      e.preventDefault();\n    } else {\n      setIsTextSelected(false);\n    }\n  }\n\n  return (\n    <div onMouseDown={()=>{!cursorInHeader && header.current.blur()}}>\n      <FlexContainer margin={isEditModeOn ? \"0 0 .5rem 0\" : \"0\"}>\n        {handleOptions()}\n      </FlexContainer>\n      <FlexContainer justifyContent=\"flex-start\">\n        <HeaderComponent\n          isEditModeOn={isEditModeOn}\n          ref={header}\n          tabIndex={0}\n          onKeyDown={(e) => {\n            handleKeyDown(e);\n          }}\n          key={\"header-\" + windowObj[\"id\"] + \"-\" + windowItem[\"id\"]}\n          as={Header1}\n          contentEditable={isEditModeOn ? \"true\" : \"false\"}\n          width={\"100%\"}\n          background={isEditModeOn ? \"white\" : \"transparent\"}\n          onClick={(e) => {\n            createLink(e);\n          }}\n          onMouseEnter={() => {\n            setCursorInHeader(true);\n          }}\n          onMouseLeave={() => {\n            setCursorInHeader(false);\n          }}\n          onBlur={() => {\n            changeItemProperty(\n              windowObj,\n              windowData,\n              setWindowData,\n              windowItem,\n              \"html\",\n              header.current.innerHTML\n            );\n          }}\n          textAlign={convertJustifyContentToTextAlign(windowItem[\"justifyContent\"])}\n          margin={\"0\"}\n          suppressContentEditableWarning={true}\n        >\n        </HeaderComponent>\n        {isEditModeOn &&\n        <DeleteButton\n          onClick={() => {\n            handleDelete(windowData, setWindowData, windowObj, windowItem[\"id\"]);\n          }}>\n          Delete\n        </DeleteButton>}\n      </FlexContainer>\n    </div>\n  );\n}\n\nconst HeaderComponent = styled.input`\n  :hover {\n    outline: ${props => !props.isEditModeOn && \"0px\"};\n  }\n\n  p::selection {\n    background-color: #2267cb;\n    color: white;\n  }\n\n  margin-right: 0.4rem;\n  word-wrap: break-word;\n  width: ${props => props.isEditModeOn ? \"81.8%\" : \"100%\"};\n  -webkit-user-select: text;\n  user-select: text;\n  cursor: ${props => props.isEditModeOn ? \"text\" : props.theme.cursors.auto};\n`;\n\nexport default Header;","/Users/maa48/github-projects/etesam-startpage/src/components/ComponentOptions/index.js",[],["152","153"],"/Users/maa48/github-projects/etesam-startpage/src/components/Image/index.js",["154","155","156","157","158"],"import React, { useState, useContext, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { FlexContainer } from \"../../styles/Layout\";\nimport { TextAlignOptions } from \"../ComponentOptions\";\nimport { AppContext } from \"../../Contexts\";\nimport { changeItemProperty, handleDelete } from \"../Window/helper\";\nimport BackButton from \"../BackButton/index\";\nimport { DeleteButton, OptionsButton } from \"../../styles/StyledComponents\"\n\nfunction Image({ windowObj, windowItem }) {\n  const [isImageFocused, setIsImageFocused] = useState(false);\n  const [isRedirectClicked, setIsRedirectClicked] = useState(false);\n  const [imageWidth, setImageWidth] = useState(\"300px\");\n  const srcInput = useRef(null);\n  const redirectInput = useRef(null);\n  const redirectButton = useRef(null);\n\n  const { isEditModeOn, windowData, setWindowData } = useContext(AppContext);\n\n  function handleOptions() {\n    function setImageUrl() {\n      changeItemProperty(\n        windowObj,\n        windowData,\n        setWindowData,\n        windowItem,\n        \"src\",\n        srcInput.current.value.trim()\n      );\n      setIsImageFocused(false);\n    }\n\n\n    function setRedirectUrl() {\n      changeItemProperty(\n        windowObj,\n        windowData,\n        setWindowData,\n        windowItem,\n        \"href\",\n        redirectInput.current.value\n      );\n      setIsRedirectClicked(false);\n    }\n\n\n    if (!isImageFocused && !isRedirectClicked) {\n      return (\n        <FlexContainer width={\"100%\"}>\n          <TextAlignOptions windowItem={windowItem} windowObj={windowObj} />\n          <OptionsButton onClick={() => {\n            {imageWidth === \"100%\" ? setImageWidth(\"300px\") : setImageWidth(\"100%\")}\n          }}>{imageWidth === \"100%\" ? \"Revert to Original\" : \"Fit Size To Window\"}</OptionsButton>\n          <OptionsButton\n            onClick={() => {\n              setIsRedirectClicked(true);\n            }}\n            width=\"95px\"\n          >\n            Set Image Url\n          </OptionsButton>\n        </FlexContainer>\n      );\n    } else if (isImageFocused) {\n      return (\n        <FlexContainer width={\"100%\"}>\n          <input\n            ref={redirectInput}\n            style={{ width: \"100%\" }}\n            placeholder={\"Enter redirect url\"}\n            defaultValue={windowItem[\"href\"]}\n            onBlur={handleBlur}\n          />\n          <OptionsButton\n            onClick={setRedirectUrl}\n            width=\"140px\"\n            ref={redirectButton}\n          >\n            Set Redirect Url\n          </OptionsButton>\n        </FlexContainer>\n      );\n    } else if (isRedirectClicked) {\n      return (\n        <FlexContainer width={\"100%\"}>\n          <BackButton\n            aria-label=\"back button\"\n            margin={\"0 0.25rem 0 0\"}\n            onClick={() => {\n              setIsRedirectClicked(false);\n            }}\n          />\n          <input\n            ref={srcInput}\n            style={{ width: \"87%\" }}\n            placeholder={\"Enter image url\"}\n            defaultValue={windowItem[\"src\"] !== null ? windowItem[\"src\"] : \"\"}\n            /*onBlur={handleBlur}*/\n          />\n          <OptionsButton\n            onClick={setImageUrl}\n            width=\"95px\"\n          >\n            Set Image Url\n          </OptionsButton>\n        </FlexContainer>\n      );\n    }\n  }\n\n\n  function handleBlur() {\n    // Timeout is needed to allow for enough time to check if the user clicked on the src input after the blur.\n    // If they did, do not count that as removing image focus\n    let redirectButtonClicked = false;\n    if (redirectButton && redirectButton.current) {\n      redirectButton.current.addEventListener(\"click\", function() {\n        redirectButtonClicked = true;\n      });\n    }\n\n    setTimeout(function() {\n      if (redirectInput && redirectInput.current !== document.activeElement) {\n        setIsImageFocused(false);\n      }\n      if (!redirectButtonClicked) {\n        setIsRedirectClicked(false);\n      }\n\n    }, 200);\n    if (redirectButton && redirectButton.current) {\n      redirectButton.current.removeEventListener(\"click\", function() {\n        redirectButtonClicked = true;\n      });\n    }\n\n  }\n\n// TODO: Get window size so that image can be resized correctly if the window size is changed.\n\n  return (\n      <FlexContainer flexDirection={\"column\"} alignItems=\"center\">\n        {isEditModeOn &&\n        <FlexContainer margin={\"0 0 .5rem 0\"} width={\"100%\"}>\n          {handleOptions()}\n        </FlexContainer>\n        }\n\n        <FlexContainer justifyContent={windowItem[\"justifyContent\"]} width=\"100%\">\n          <ImageWrapper\n            href={isEditModeOn ? null : (windowItem[\"href\"] === \"\" ? \"javascript:void(0)\" : windowItem[\"href\"])}\n            onFocus={() => {\n              setIsRedirectClicked(false);\n              setIsImageFocused(true);\n            }}\n            onBlur={() => {\n              handleBlur();\n            }}\n            tabIndex={0}\n            imageWidth={imageWidth}\n          >\n            <ImageComponent src={windowItem[\"src\"]} />\n          </ImageWrapper>\n        </FlexContainer>\n        {isEditModeOn &&\n        <DeleteButton\n          margin={\"0.5rem 0 0\"}\n          onClick={() => {\n            handleDelete(windowData, setWindowData, windowObj, windowItem[\"id\"]);\n          }}>\n          Delete\n        </DeleteButton>}\n      </FlexContainer>\n  );\n}\n\nconst ImageComponent = styled.img`\n  width: 100%;\n  height: 100%;\n\n  :focus {\n    border: 1px solid blue;\n  }\n`;\n\nconst ImageWrapper = styled.a`\n  :focus {\n    outline: ${props => props.href === \"javascript:void(0)\" ? \"0\" : \"2px dotted gray\"};\n    cursor: ${props => props.href === \"javascript:void(0)\" ? props.theme.cursors.auto : props.theme.cursors.wait};\n  }\n;\n  cursor: ${props => props.href === \"javascript:void(0)\" ? props.theme.cursors.auto : props.theme.cursors.pointer};\n  display: block;\n  height: auto;\n  width: ${props => props.imageWidth};\n`;\n\nexport default Image;","/Users/maa48/github-projects/etesam-startpage/src/styles/StyledComponents.js",[],"/Users/maa48/github-projects/etesam-startpage/src/components/BackButton/index.js",[],"/Users/maa48/github-projects/etesam-startpage/src/components/Video/index.js",[],"/Users/maa48/github-projects/etesam-startpage/src/data/RenderIcons.js",[],"/Users/maa48/github-projects/etesam-startpage/src/components/Startbar/index.js",["159","160"],"import React, { useEffect, useContext, useState, useRef } from \"react\";\nimport {\n  Bar,\n  StartButton,\n  BlueSegment,\n  TimeSegment,\n  Tab,\n  TabContainer,\n  StartWindow,\n  StartHeader,\n  StartBody, StartFooter, LoginButton, LoginImg\n} from \"./styles\";\nimport normalImg from \"../../media/start-button.png\";\nimport pressedImg from \"../../media/start-button-pressed.png\";\nimport blueBarImg from \"../../media/blue-bar-img.png\";\nimport timeBarImg from \"../../media/time-bar-img.png\";\nimport tabBackgroundImg from \"../../media/tab-background.png\";\nimport startFooterImg from \"../../media/start-footer.png\";\nimport startHeaderImg from \"../../media/start-header.png\";\nimport { getTimePeriodName, getTimeUnits, getTwelveHourTime } from \"../../functions/helpers\";\nimport { AppContext } from \"../../Contexts\";\nimport { setDataProperty } from \"../Window/helper\";\nimport { StartbarItem } from \"./items\";\n\nfunction Startbar() {\n  const [time, setTime] = useState(\"\");\n  const startButton = useRef(null);\n  const startWindow = useRef(null);\n  const [isStartWindowShowing, setIsStartWindowShowing] = useState(false);\n  const {\n    windowData,\n    setWindowData,\n    setFocusedWindow\n  } = useContext(AppContext);\n\n  const tabs = windowData.map((item, index) => {\n    const windowItem = item;\n    return (\n      <Tab\n        tabBackgroundImg={tabBackgroundImg}\n        pressed={!item[\"hidden\"]}\n        onClick={() => {\n          setFocusedWindow(item[\"id\"]);\n          setDataProperty(windowData, setWindowData, windowItem, \"hidden\", !item[\"hidden\"]);\n        }}\n        key={`tab-${index}`}\n      >\n        {item[\"windowTitle\"]}\n      </Tab>\n    );\n  });\n\n  function handleBlur(e) {\n    if (startWindow.current) {\n      if (e.target !== startButton.current && !startWindow.current.contains(e.target)) {\n        setIsStartWindowShowing(false);\n      }\n    }\n  }\n\n  useEffect(() => {\n    document.addEventListener(\"click\", handleBlur);\n    return () => {\n      document.removeEventListener(\"click\", handleBlur);\n    };\n  }, []);\n\n  useEffect(() => {\n    let timeUnits = getTimeUnits();\n    let timeText = getTwelveHourTime(timeUnits[\"hour\"]) + \":\" + timeUnits[\"minutes\"] + \" \" + getTimePeriodName(timeUnits[\"hour\"]);\n    setTime(timeText);\n    const interval = setInterval(() => {\n      timeUnits = getTimeUnits();\n      timeText = getTwelveHourTime(timeUnits[\"hour\"]) + \":\" + timeUnits[\"minutes\"] + getTimePeriodName(timeUnits[\"hour\"]);\n      setTime(timeText);\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [setTime]);\n\n  return (\n    <Bar>\n      <StartButton\n        ref={startButton}\n        normalImg={normalImg}\n        pressedImg={pressedImg}\n        isPressed={isStartWindowShowing}\n        onClick={() => {\n          setIsStartWindowShowing(!isStartWindowShowing);\n        }}\n      />\n      {isStartWindowShowing &&\n      <StartWindow ref={startWindow}>\n        <StartHeader\n          image={startHeaderImg}\n        >\n          Administrator\n        </StartHeader>\n        <StartBody>\n          <StartbarItem\n            identifier=\"Settings\"\n            setIsStartWindowShowing={setIsStartWindowShowing}\n          />\n          <StartbarItem identifier=\"Create A New Window\" />\n          <StartbarItem identifier=\"Add Icon\" />\n          <StartbarItem identifier=\"Edit Mode\" />\n        </StartBody>\n        <StartFooter image={startFooterImg}>\n        </StartFooter>\n      </StartWindow>\n      }\n      <BlueSegment blueBarImg={blueBarImg} />\n      <TabContainer>\n        {tabs}\n      </TabContainer>\n      <TimeSegment timeBarImg={timeBarImg}> {time} </TimeSegment>\n    </Bar>\n  );\n}\n\n\nexport default Startbar;","/Users/maa48/github-projects/etesam-startpage/src/components/Icon/index.js",["161","162"],"import React, { useContext, useRef } from \"react\";\nimport styled, { withTheme } from \"styled-components\";\nimport Draggable from \"react-draggable\";\nimport { setDataProperty } from \"../Window/helper\";\nimport { AppContext } from \"../../Contexts\";\nimport { deleteDataItem } from \"../../functions/helpers\";\n\n\nfunction Index({ iconItem, theme, id }) {\n  const { iconData, setIconData, isEditModeOn, settingsData } = useContext(AppContext);\n  const iconRef = useRef(null);\n\n  const {attributes, listeners, setNodeRef, transform} = useDraggable({\n    id: id,\n  });\n\n  const style = {\n    transform: CSS.Translate.toString(transform),\n  };\n\n  function handleDoubleClick() {\n    if (!isEditModeOn) {\n      document.body.style.cursor = theme.cursors.wait;\n      window.location = iconItem[\"redirect\"];\n    }\n  }\n\n  return (\n    <Draggable\n      bounds=\"#wrapper\"\n      nodeRef={iconRef}\n      grid={\n        parseInt(settingsData[\"draggingGrid\"]) !== 0 &&\n        [parseInt(settingsData[\"draggingGrid\"]), parseInt(settingsData[\"draggingGrid\"])]\n      }\n      position={{ x: iconItem[\"xCoord\"], y: iconItem[\"yCoord\"] }}\n      onStop={() => {\n         setDataProperty(\n            iconData,\n            setIconData,\n            iconItem,\n            \"position\",\n            iconRef\n          );\n        }\n      }\n    >\n      <IconWrapper\n        ref={iconRef}\n        tabIndex={0}\n        onDoubleClick={handleDoubleClick}\n      >\n        {isEditModeOn\n          ?\n          <header>\n            <IconText>Img Url</IconText>\n            <IconInput\n              defaultValue={iconItem[\"src\"]}\n              onBlur={(e) => {\n                setDataProperty(\n                  iconData,\n                  setIconData,\n                  iconItem,\n                  \"src\",\n                  e.target.value\n                );\n              }}\n            />\n          </header>\n          : <IconImg src={iconItem[\"src\"]} />\n        }\n\n        {isEditModeOn\n          ?\n          <section>\n            <IconText>Icon Title</IconText>\n            <IconTextArea\n              defaultValue={iconItem[\"title\"]}\n              onBlur={(e) => {\n                setDataProperty(\n                  iconData,\n                  setIconData,\n                  iconItem,\n                  \"title\",\n                  e.target.value\n                );\n              }}\n            />\n          </section>\n          : <IconText> {iconItem[\"title\"]} </IconText>}\n        {isEditModeOn &&\n        <footer>\n          <section>\n            <IconText>Redirect Url</IconText>\n            <IconInput\n              defaultValue={iconItem[\"redirect\"]}\n              onBlur={(e) => {\n                setDataProperty(\n                  iconData,\n                  setIconData,\n                  iconItem,\n                  \"redirect\",\n                  e.target.value\n                );\n              }}\n            />\n          </section>\n          <DeleteRow>\n            <button\n              onClick={() => {\n                deleteDataItem(iconData, setIconData, iconItem);\n              }}\n            >\n              Delete Icon\n            </button>\n          </DeleteRow>\n        </footer>}\n      </IconWrapper>\n    </Draggable>\n  );\n}\n\nconst IconWrapper = styled.div`\n  position: absolute;\n  z-index: 1;\n  left: 1rem;\n  top: 1rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  :focus {\n    outline: 1px dotted black;\n  }\n`;\n\nconst IconInput = styled.input`\n  margin-top: 0.25rem;\n`;\n\nconst IconTextArea = styled.textarea`\n  text-align: center;\n  margin-top: 0.25rem;\n  resize: none;\n`;\n\nconst IconImg = styled.img`\n  height: 48px;\n  width: auto;\n  pointer-events: none;\n`;\n\nconst DeleteRow = styled.section`\n  display: flex;\n  justify-content: center;\n  padding-top: 0.25rem;\n`;\n\nconst IconText = styled.p`\n  font-family: ${props => props.theme.fonts.primary};\n  margin-top: 0.35rem;\n  color: white;\n  text-align: center;\n  width: auto;\n  max-width: 100px;\n  max-height: 43px;\n  display: -webkit-box;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  -webkit-line-clamp: 3;\n  text-overflow: ellipsis;\n  text-shadow: 1.25px 1.2px 1px #000000;\n`;\n\nexport default withTheme(Index);","/Users/maa48/github-projects/etesam-startpage/src/components/Startbar/items.js",[],"/Users/maa48/github-projects/etesam-startpage/src/components/Startbar/styles.js",[],"/Users/maa48/github-projects/etesam-startpage/src/components/Toggle/index.js",[],"/Users/maa48/github-projects/etesam-startpage/src/styles/theme.js",[],"/Users/maa48/github-projects/etesam-startpage/src/components/List/index.js",["163"],"import React, { useContext, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { AppContext } from \"../../Contexts\";\nimport { changeItemProperty, handleDelete } from \"../Window/helper\";\nimport { FlexContainer } from \"../../styles/Layout\";\nimport { getMaxId } from \"../../functions/helpers\";\n\nfunction List({ windowItem, windowObj }) {\n  const { isEditModeOn, windowData, setWindowData } = useContext(AppContext);\n  const list = useRef(null);\n  const listInput = useRef(null);\n  const children = windowItem[\"children\"].map((child, index) => {\n    // is content editable true\n    if (!isEditModeOn && child[\"html\"].indexOf(\"true\") === 21 && child[\"html\"].indexOf(\"show\") !== -1) {\n      child[\"html\"] = child[\"html\"].replace(\"true\", \"false\");\n      child[\"html\"] = child[\"html\"].replace(\"show\", \"hide\");\n    } else if (isEditModeOn && child[\"html\"].indexOf(\"false\") === 21 && child[\"html\"].indexOf(\"hide\") !== -1) {\n      child[\"html\"] = child[\"html\"].replace(\"false\", \"true\");\n      child[\"html\"] = child[\"html\"].replace(\"hide\", \"show\");\n    }\n    return child[\"html\"];\n  }).join(\"\");\n\n  useEffect(() => {\n    list.current.innerHTML = children;\n    const listItems = list.current.getElementsByTagName(\"li\");\n    if (listItems) {\n      for (let i = 0; i < listItems.length; i++) {\n        let currentListItem = listItems[i];\n        if (!currentListItem.onblur) {\n          currentListItem.onblur = function(e) {\n            const tempChildren = [...windowItem[\"children\"]];\n            const strikethroughClass = currentListItem\n              .classList.contains(\"strikethrough\") ? \"strikethrough\" : \"\"\n            const strikethroughButtonText =\n              currentListItem\n                .classList.contains(\"strikethrough\") ? \"Remove Strikethrough\" : \"Strikethrough\";\n\n            tempChildren[i][\"html\"] =\n              `<li contenteditable=\"true\" class=\"list-item ${strikethroughClass}\">${e.target.innerText}</li>\n                <div class=\"list-item-options show\">\n                  <button class=\"list-delete-button\">Delete</button>\n                  <button class=\"list-strikethrough-button\">${strikethroughButtonText}</button>\n                </div>`;\n            changeItemProperty(\n              windowObj,\n              windowData,\n              setWindowData,\n              windowItem,\n              \"children\",\n              tempChildren\n            );\n          };\n        }\n      }\n    }\n\n    const deleteButtons = list.current.getElementsByClassName(\"list-delete-button\");\n    if (deleteButtons) {\n      for (let i = 0; i < deleteButtons.length; i++) {\n        let currentButton = deleteButtons[i];\n        currentButton.onclick = function() {\n          let tempChildren = [...windowItem[\"children\"]];\n          tempChildren.splice(i, 1);\n          changeItemProperty(\n            windowObj,\n            windowData,\n            setWindowData,\n            windowItem,\n            \"children\",\n            tempChildren\n          );\n        };\n      }\n    }\n\n    const strikethroughButtons = list.current.getElementsByClassName(\"list-strikethrough-button\");\n    if (strikethroughButtons) {\n      for (let i = 0; i < strikethroughButtons.length; i++) {\n        let currentButton = strikethroughButtons[i];\n        currentButton.onclick = function() {\n          const tempChildren = [...windowItem[\"children\"]];\n          const listItem = listItems[i];\n          /*tempChildren[i][\"html\"] = {*/\n          if (listItem.classList.contains(\"strikethrough\")) {\n            tempChildren[i][\"html\"] =\n              `<li contenteditable=\"true\" class=\"list-item\">${listItem.innerText}</li>\n                <div class=\"list-item-options show\">\n                  <button class=\"list-delete-button\">Delete</button>\n                  <button class=\"list-strikethrough-button\">Strikethrough</button>\n                </div>`;\n          } else {\n            tempChildren[i][\"html\"] =\n              `<li contenteditable=\"true\" class=\"list-item strikethrough\">${listItem.innerText}</li>\n                <div class=\"list-item-options show\">\n                  <button class=\"list-delete-button\">Delete</button>\n                  <button class=\"list-strikethrough-button\">Remove Strikethrough</button>\n                </div>`;\n          }\n\n          changeItemProperty(\n            windowObj,\n            windowData,\n            setWindowData,\n            windowItem,\n            \"children\",\n            tempChildren\n          );\n        };\n      }\n    }\n  }, [windowData, list, isEditModeOn]);\n\n  function handleClick() {\n    const tempChildren = [...windowItem[\"children\"]];\n    // TODO: Change this to get max id\n    let newId = 0;\n    if (tempChildren.length > 0)\n      newId = getMaxId(windowItem) + 1;\n\n    tempChildren.push({\n      id: newId,\n      html:\n        `<li contenteditable=\"true\" class=\"list-item\">${listInput.current.value}</li>\n        <div class=\"list-item-options show\">\n          <button class=\"list-delete-button\">Delete</button>\n          <button class=\"list-strikethrough-button\">Strikethrough</button>\n        </div>`\n    });\n\n    changeItemProperty(\n      windowObj,\n      windowData,\n      setWindowData,\n      windowItem,\n      \"children\",\n      tempChildren\n    );\n    listInput.current.value = \"\";\n  }\n\n\n  return (\n    <div>\n      <StyledList ref={list}>\n      </StyledList>\n      {isEditModeOn &&\n      <section>\n        <FlexContainer justifyContent=\"flex-start\" margin=\"0.5rem\">\n          <ListInput ref={listInput} placeholder=\"List Item Text Goes Here\" />\n          <ListButton onClick={handleClick}>Add Item</ListButton>\n        </FlexContainer>\n        <FlexContainer width=\"100%\" justifyContent=\"center\">\n          <button\n            onClick={() => {\n              handleDelete(windowData, setWindowData, windowObj, windowItem[\"id\"]);\n            }}\n          >\n            Delete List\n          </button>\n        </FlexContainer>\n      </section>\n      }\n    </div>\n\n  );\n}\n\nconst StyledList = styled.ul`\n  list-style-type: disc;\n  list-style-position: inside;\n  padding-left: 0.5rem;\n`;\n\nconst ListInput = styled.input`\n  width: 100%;\n`;\n\nconst ListButton = styled.button`\n  margin: 0 0 0 0.5rem;\n`;\n\nexport default List;","/Users/maa48/github-projects/etesam-startpage/src/components/DragIndicator/index.js",[],{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","severity":1,"message":"169","line":2,"column":8,"nodeType":"170","messageId":"171","endLine":2,"endColumn":14},{"ruleId":"164","replacedBy":"172"},{"ruleId":"166","replacedBy":"173"},{"ruleId":"164","replacedBy":"174"},{"ruleId":"166","replacedBy":"175"},{"ruleId":"176","severity":1,"message":"177","line":19,"column":6,"nodeType":"178","endLine":19,"endColumn":30,"suggestions":"179"},{"ruleId":"180","severity":1,"message":"181","line":29,"column":7,"nodeType":"182","endLine":36,"endColumn":8},{"ruleId":"168","severity":1,"message":"183","line":1,"column":29,"nodeType":"170","messageId":"171","endLine":1,"endColumn":37},{"ruleId":"168","severity":1,"message":"184","line":78,"column":11,"nodeType":"170","messageId":"171","endLine":78,"endColumn":23},{"ruleId":"176","severity":1,"message":"185","line":50,"column":6,"nodeType":"178","endLine":50,"endColumn":13,"suggestions":"186"},{"ruleId":"168","severity":1,"message":"187","line":10,"column":8,"nodeType":"170","messageId":"171","endLine":10,"endColumn":21},{"ruleId":"164","replacedBy":"188"},{"ruleId":"166","replacedBy":"189"},{"ruleId":"190","severity":1,"message":"191","line":52,"column":13,"nodeType":"192","messageId":"193","endLine":52,"endColumn":85},{"ruleId":"194","severity":1,"message":"195","line":151,"column":70,"nodeType":"196","messageId":"197","endLine":151,"endColumn":90},{"ruleId":"194","severity":1,"message":"195","line":188,"column":40,"nodeType":"196","messageId":"197","endLine":188,"endColumn":60},{"ruleId":"194","severity":1,"message":"195","line":189,"column":39,"nodeType":"196","messageId":"197","endLine":189,"endColumn":59},{"ruleId":"194","severity":1,"message":"195","line":192,"column":37,"nodeType":"196","messageId":"197","endLine":192,"endColumn":57},{"ruleId":"168","severity":1,"message":"198","line":11,"column":27,"nodeType":"170","messageId":"171","endLine":11,"endColumn":38},{"ruleId":"168","severity":1,"message":"199","line":11,"column":40,"nodeType":"170","messageId":"171","endLine":11,"endColumn":48},{"ruleId":"168","severity":1,"message":"200","line":11,"column":48,"nodeType":"170","messageId":"171","endLine":11,"endColumn":60},{"ruleId":"201","severity":1,"message":"202","line":54,"column":9,"nodeType":"203","endLine":54,"endColumn":22},{"ruleId":"176","severity":1,"message":"204","line":112,"column":6,"nodeType":"178","endLine":112,"endColumn":38,"suggestions":"205"},"no-native-reassign",["206"],"no-negated-in-lhs",["207"],"no-unused-vars","'styled' is defined but never used.","Identifier","unusedVar",["206"],["207"],["206"],["207"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'backgroundColor' and 'backgroundImage'. Either include them or remove the dependency array.","ArrayExpression",["208"],"jsx-a11y/role-supports-aria-props","The attribute aria-selected is not supported by the role button. This role is implicit on the element button.","JSXOpeningElement","'useState' is defined but never used.","'isEditModeOn' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'setSettingsData' and 'settingsData'. Either include them or remove the dependency array.",["209"],"'DragIndicator' is defined but never used.",["206"],["207"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","'LoginButton' is defined but never used.","'LoginImg' is defined but never used.","'settingsData' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook useEffect has missing dependencies: 'children', 'setWindowData', 'windowItem', and 'windowObj'. Either include them or remove the dependency array.",["210"],"no-global-assign","no-unsafe-negation",{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},"Update the dependencies array to be: [imageInput, colorInput, backgroundImage, backgroundColor]",{"range":"217","text":"218"},"Update the dependencies array to be: [color, setSettingsData, settingsData]",{"range":"219","text":"220"},"Update the dependencies array to be: [windowData, list, isEditModeOn, children, windowItem, windowObj, setWindowData]",{"range":"221","text":"222"},[696,720],"[imageInput, colorInput, backgroundImage, backgroundColor]",[1259,1266],"[color, setSettingsData, settingsData]",[4484,4516],"[windowData, list, isEditModeOn, children, windowItem, windowObj, setWindowData]"]
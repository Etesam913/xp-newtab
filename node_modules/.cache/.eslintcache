[{"/Users/maa48/github-projects/etesam-startpage/src/index.js":"1","/Users/maa48/github-projects/etesam-startpage/src/App.js":"2","/Users/maa48/github-projects/etesam-startpage/src/Contexts.js":"3","/Users/maa48/github-projects/etesam-startpage/src/data/RenderWindows.js":"4","/Users/maa48/github-projects/etesam-startpage/src/data/RenderIcons.js":"5","/Users/maa48/github-projects/etesam-startpage/src/functions/helpers.js":"6","/Users/maa48/github-projects/etesam-startpage/src/components/SettingsWindow/index.js":"7","/Users/maa48/github-projects/etesam-startpage/src/components/Startbar/index.js":"8","/Users/maa48/github-projects/etesam-startpage/src/components/Window/index.js":"9","/Users/maa48/github-projects/etesam-startpage/src/components/Icon/index.js":"10","/Users/maa48/github-projects/etesam-startpage/src/components/SettingsWindow/Tabs.js":"11","/Users/maa48/github-projects/etesam-startpage/src/components/Startbar/styles.js":"12","/Users/maa48/github-projects/etesam-startpage/src/components/Window/helper.js":"13","/Users/maa48/github-projects/etesam-startpage/src/components/Startbar/items.js":"14","/Users/maa48/github-projects/etesam-startpage/src/styles/Headers.js":"15","/Users/maa48/github-projects/etesam-startpage/src/styles/Layout.js":"16","/Users/maa48/github-projects/etesam-startpage/src/components/Image/index.js":"17","/Users/maa48/github-projects/etesam-startpage/src/components/Header/index.js":"18","/Users/maa48/github-projects/etesam-startpage/src/components/Video/index.js":"19","/Users/maa48/github-projects/etesam-startpage/src/components/Toggle/index.js":"20","/Users/maa48/github-projects/etesam-startpage/src/styles/StyledComponents.js":"21","/Users/maa48/github-projects/etesam-startpage/src/components/SvgMaster.js":"22","/Users/maa48/github-projects/etesam-startpage/src/components/BackButton/index.js":"23","/Users/maa48/github-projects/etesam-startpage/src/components/ComponentOptions/index.js":"24","/Users/maa48/github-projects/etesam-startpage/src/styles/theme.js":"25","/Users/maa48/github-projects/etesam-startpage/src/components/List/index.js":"26","/Users/maa48/github-projects/etesam-startpage/src/components/DragIndicator/index.js":"27","/Users/maa48/github-projects/etesam-startpage/src/components/SearchBar/index.js":"28"},{"size":219,"mtime":1614673424072,"results":"29","hashOfConfig":"30"},{"size":2903,"mtime":1620156643830,"results":"31","hashOfConfig":"30"},{"size":131,"mtime":1620156643831,"results":"32","hashOfConfig":"30"},{"size":459,"mtime":1620105476889,"results":"33","hashOfConfig":"30"},{"size":451,"mtime":1620156643841,"results":"34","hashOfConfig":"30"},{"size":5033,"mtime":1620161848417,"results":"35","hashOfConfig":"30"},{"size":2227,"mtime":1620156643836,"results":"36","hashOfConfig":"30"},{"size":3617,"mtime":1620156643837,"results":"37","hashOfConfig":"30"},{"size":6843,"mtime":1620162142326,"results":"38","hashOfConfig":"30"},{"size":4003,"mtime":1620156643833,"results":"39","hashOfConfig":"30"},{"size":5275,"mtime":1620156643835,"results":"40","hashOfConfig":"30"},{"size":3829,"mtime":1620156643838,"results":"41","hashOfConfig":"30"},{"size":6964,"mtime":1620157337923,"results":"42","hashOfConfig":"30"},{"size":2010,"mtime":1620156643837,"results":"43","hashOfConfig":"30"},{"size":762,"mtime":1615676880073,"results":"44","hashOfConfig":"30"},{"size":649,"mtime":1620105476894,"results":"45","hashOfConfig":"30"},{"size":6498,"mtime":1620156643834,"results":"46","hashOfConfig":"30"},{"size":2551,"mtime":1620157538717,"results":"47","hashOfConfig":"30"},{"size":3024,"mtime":1620156643840,"results":"48","hashOfConfig":"30"},{"size":1036,"mtime":1620156643839,"results":"49","hashOfConfig":"30"},{"size":356,"mtime":1616110124268,"results":"50","hashOfConfig":"30"},{"size":436,"mtime":1620156643838,"results":"51","hashOfConfig":"30"},{"size":786,"mtime":1620105476882,"results":"52","hashOfConfig":"30"},{"size":1218,"mtime":1620157337928,"results":"53","hashOfConfig":"30"},{"size":615,"mtime":1620156643844,"results":"54","hashOfConfig":"30"},{"size":6188,"mtime":1620156643834,"results":"55","hashOfConfig":"30"},{"size":1901,"mtime":1620156643832,"results":"56","hashOfConfig":"30"},{"size":2929,"mtime":1620156643835,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"lxsbxr",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"/Users/maa48/github-projects/etesam-startpage/src/index.js",[],["120","121"],"/Users/maa48/github-projects/etesam-startpage/src/App.js",[],"/Users/maa48/github-projects/etesam-startpage/src/Contexts.js",[],"/Users/maa48/github-projects/etesam-startpage/src/data/RenderWindows.js",[],"/Users/maa48/github-projects/etesam-startpage/src/data/RenderIcons.js",[],"/Users/maa48/github-projects/etesam-startpage/src/functions/helpers.js",[],"/Users/maa48/github-projects/etesam-startpage/src/components/SettingsWindow/index.js",["122","123"],"import React, { useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { ColorAndImageTab, InfoTab } from \"./Tabs\";\n\nfunction SettingsWindow({\n                          setIsSettingsShowing,\n                          backgroundColor,\n                          setBackgroundColor,\n                          backgroundImage,\n                          setBackgroundImage\n                        }) {\n  const [currentTab, setCurrentTab] = useState(\"image/color\");\n  const imageInput = useRef(null);\n  const colorInput = useRef(null);\n\n  useEffect(() => {\n    imageInput.current.value = backgroundImage;\n    colorInput.current.value = backgroundColor;\n  }, [imageInput, colorInput]);\n\n  useEffect(() => {\n    localStorage.setItem(\"backgroundColor\", backgroundColor);\n    localStorage.setItem(\"backgroundImage\", backgroundImage);\n  }, [backgroundColor, backgroundImage]);\n\n  return (\n    <div>\n      <Window className={\"window\"}>\n        <div className=\"title-bar\">\n          <div className=\"title-bar-text\"> Settings</div>\n          <div className=\"title-bar-controls\">\n            <button aria-label=\"Close\" onClick={() => {\n              setIsSettingsShowing(false);\n            }} />\n          </div>\n        </div>\n        <div className=\"window-body\">\n          <menu role=\"tablist\">\n            <button aria-selected={currentTab === \"image/color\"} aria-controls=\"color\"\n                    onClick={() => {\n                      setCurrentTab(\"image/color\");\n                    }}>Image/Color\n            </button>\n            <button aria-selected={currentTab === \"info\"} onClick={() => {\n              setCurrentTab(\"info\");\n            }} aria-controls=\"info\">Info\n            </button>\n          </menu>\n\n          {currentTab === \"image/color\" &&\n          <ColorAndImageTab\n            imageInput={imageInput}\n            colorInput={colorInput}\n            backgroundColor={backgroundColor}\n            setBackgroundColor={setBackgroundColor}\n            backgroundImage={backgroundImage}\n            setBackgroundImage={setBackgroundImage}\n          />}\n\n          {currentTab === \"info\" && <InfoTab />}\n        </div>\n      </Window>\n      <GrayShade onClick={() => {\n        setIsSettingsShowing(false);\n      }} />\n    </div>\n  );\n}\n\nconst Window = styled.div`\n  width: 37rem;\n  height: auto;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  font-family: 'Pixelated MS Sans Serif', 'Arial', serif;\n  z-index: 6;\n  @media only screen and (max-width: 768px) {\n    width: 80% !important;\n  }\n`;\nconst GrayShade = styled.div`\n  position: absolute;\n  height: 100vh;\n  width: 100vw;\n  background: rgba(0, 0, 0, 0.5);\n  z-index: 5;\n`;\n\nexport default SettingsWindow;","/Users/maa48/github-projects/etesam-startpage/src/components/Startbar/index.js",["124","125"],"import React, { useEffect, useContext, useState, useRef } from \"react\";\nimport {\n  Bar,\n  StartButton,\n  BlueSegment,\n  TimeSegment,\n  Tab,\n  TabContainer,\n  StartWindow,\n  StartHeader,\n  StartBody, StartFooter\n} from \"./styles\";\nimport normalImg from \"../../media/start-button.png\";\nimport pressedImg from \"../../media/start-button-pressed.png\";\nimport blueBarImg from \"../../media/blue-bar-img.png\";\nimport timeBarImg from \"../../media/time-bar-img.png\";\nimport tabBackgroundImg from \"../../media/tab-background.png\";\nimport startFooterImg from \"../../media/start-footer.png\";\nimport startHeaderImg from \"../../media/start-header.png\";\nimport { getTimePeriodName, getTimeUnits, getTwelveHourTime } from \"../../functions/helpers\";\nimport { AppContext } from \"../../Contexts\";\nimport { setWindowProperty } from \"../Window/helper\";\nimport { StartbarItem } from \"./items\";\n\nfunction Startbar() {\n  const [time, setTime] = useState(\"\");\n  const startButton = useRef(null);\n  const startWindow = useRef(null);\n  const [isStartWindowShowing, setIsStartWindowShowing] = useState(false);\n  const {\n    windowData,\n    setWindowData,\n    setFocusedWindow\n  } = useContext(AppContext);\n\n  const tabs = windowData.map((item, index) => {\n    const windowItem = item;\n    return (\n      <Tab\n        tabBackgroundImg={tabBackgroundImg}\n        pressed={!item[\"hidden\"]}\n        onClick={() => {\n          setFocusedWindow(item[\"id\"]);\n          setWindowProperty(windowData, setWindowData, windowItem, \"hidden\", !item[\"hidden\"]);\n        }}\n        key={`tab-${index}`}\n      >\n        {item[\"windowTitle\"]}\n      </Tab>\n    );\n  });\n\n  function handleBlur(e) {\n    if (startWindow.current) {\n      if (e.target !== startButton.current && !startWindow.current.contains(e.target)) {\n        setIsStartWindowShowing(false);\n      }\n    }\n\n  }\n\n  useEffect(() => {\n    document.addEventListener(\"click\", handleBlur);\n    return () => {\n      document.removeEventListener(\"click\", handleBlur);\n\n    };\n\n  }, []);\n\n  useEffect(() => {\n    let timeUnits = getTimeUnits();\n    let timeText = getTwelveHourTime(timeUnits[\"hour\"]) + \":\" + timeUnits[\"minutes\"] + \" \" + getTimePeriodName(timeUnits[\"hour\"]);\n    setTime(timeText);\n    const interval = setInterval(() => {\n      timeUnits = getTimeUnits();\n      timeText = getTwelveHourTime(timeUnits[\"hour\"]) + \":\" + timeUnits[\"minutes\"] + getTimePeriodName(timeUnits[\"hour\"]);\n      setTime(timeText);\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [setTime]);\n\n  return (\n    <Bar>\n      <StartButton\n        ref={startButton}\n        normalImg={normalImg}\n        pressedImg={pressedImg}\n        isPressed={isStartWindowShowing}\n        onClick={() => {\n          setIsStartWindowShowing(!isStartWindowShowing);\n        }}\n      />\n      {isStartWindowShowing &&\n      <StartWindow ref={startWindow}>\n        <StartHeader image={startHeaderImg}> Administrator </StartHeader>\n        <StartBody>\n          <StartbarItem identifier=\"Edit Mode\"/>\n          <StartbarItem identifier=\"Settings\" setIsStartWindowShowing={setIsStartWindowShowing}/>\n          <StartbarItem identifier=\"Create A New Window\"/>\n          <StartbarItem identifier=\"Add Icon\"/>\n        </StartBody>\n        <StartFooter image={startFooterImg} />\n      </StartWindow>\n      }\n      <BlueSegment blueBarImg={blueBarImg} />\n      <TabContainer>\n        {tabs}\n      </TabContainer>\n      <TimeSegment timeBarImg={timeBarImg}> {time} </TimeSegment>\n    </Bar>\n  );\n}\n\n\nexport default Startbar;","/Users/maa48/github-projects/etesam-startpage/src/components/Window/index.js",["126","127"],"/Users/maa48/github-projects/etesam-startpage/src/components/Icon/index.js",[],"/Users/maa48/github-projects/etesam-startpage/src/components/SettingsWindow/Tabs.js",["128"],"import React from \"react\";\nimport { Header1 } from \"../../styles/Headers\";\nimport { FlexContainer } from \"../../styles/Layout\";\nimport { HexColorPicker } from \"react-colorful\";\nimport styled from \"styled-components\";\n\n\nexport function ColorAndImageTab({\n                                   imageInput,\n                                   backgroundImage,\n                                   setBackgroundImage,\n                                   colorInput,\n                                   backgroundColor,\n                                   setBackgroundColor\n                                 }) {\n\n  function handleColorInputEnter(e) {\n    if (e.keyCode === 13) setBackgroundColor(e.target.value);\n  }\n\n  function handleImageInputEnter(e) {\n    if (e.keyCode === 13) setBackgroundImage(e.target.value);\n  }\n\n  function handleKeyDown(e) {\n    // Do not allow open and closed parenthesis\n    if (e.which === 40 || e.which === 41) {\n      e.preventDefault();\n    }\n  }\n\n  return (\n    <article role=\"tabpanel\">\n      <Header1 margin={\"1rem 0 1rem\"}>Change Background Image</Header1>\n      <FlexContainer justifyContent={\"flex-start\"} alignItems={\"flex-start\"} tablet>\n        <TabInput\n          ref={imageInput}\n          defaultValue={backgroundImage}\n          placeholder={\"Enter Image Url\"}\n          width={\"70%\"}\n          onKeyDown={(e) => {\n            handleImageInputEnter(e);\n          }} />\n        <FlexContainer flexDirection=\"column\" alignItems={\"flex-start\"}>\n          <button\n            onClick={() => {\n              setBackgroundImage(imageInput.current.value);\n            }}\n          >\n            Set Image\n          </button>\n          <RemoveButton\n            onClick={() => {\n              setBackgroundImage(\"\");\n            }}\n          >\n            Remove Image\n          </RemoveButton>\n        </FlexContainer>\n\n      </FlexContainer>\n\n      <Header1 margin={\"1.5rem 0 1rem\"}>Change Background Color</Header1>\n      <FlexContainer tablet justifyContent={\"flex-start\"} alignItems={\"flex-start\"}>\n        <TabInput\n          placeholder={\"Enter Hex Color Code\"}\n          ref={colorInput}\n          value={backgroundColor}\n          onKeyPress={(e) => {\n            handleKeyDown(e);\n          }}\n          onChange={(e) => {\n            setBackgroundColor(e.target.value + \"\");\n          }}\n          onKeyDown={(e) => {\n            handleColorInputEnter(e);\n          }}\n        />\n        <HexColorPicker color={backgroundColor} onChange={setBackgroundColor} />\n      </FlexContainer>\n\n    </article>\n  );\n}\n\nconst TabInput = styled.input`\n  margin-right: 1rem;\n  width: ${props => props.width};\n  @media only screen and (max-width: 768px) {\n    margin-bottom: 1rem;\n    width: 80%;\n  }\n`;\nconst RemoveButton = styled.button`\n  margin-top: 0.5rem;\n`;\n\nexport function InfoTab() {\n  return (\n    <article role=\"tabpanel\">\n      <Header1 margin={\"0 0 1rem\"}>Windows XP New Tab</Header1>\n      <InfoGrid>\n        <p style={{ marginRight: \"0.5rem\" }}>GitHub Link: </p>\n        <a href={\"https://github.com/Etesam913/windowsxp-newtab\"}>\n          https://github.com/Etesam913/windowsxp-newtab\n        </a>\n\n        <p style={{ marginRight: \"0.5rem\" }}>Firefox Addon Link: </p>\n        <a href={\"https://github.com/Etesam913/windowsxp-newtab\"}>\n          https://github.com/Etesam913/windowsxp-newtab\n        </a>\n\n        <p style={{ marginRight: \"0.5rem\" }}>Chrome Addon Link: </p>\n        <a href={\"https://github.com/Etesam913/windowsxp-newtab\"}>\n          https://github.com/Etesam913/windowsxp-newtab\n        </a>\n      </InfoGrid>\n    </article>\n  );\n}\n\nconst InfoGrid = styled.div`\n  margin-top: 0.25rem;\n  display: inline-grid;\n  grid-template-columns: auto auto;\n  grid-auto-rows: auto auto auto;\n  align-self: center;\n  row-gap: .75rem;\n  @media only screen and (max-width: 768px) {\n    grid-template-columns: auto;\n  }\n`;\n\n// Allows user to set settings such as grid, icon size\nexport function MiscTab() {\n\n}\n\n","/Users/maa48/github-projects/etesam-startpage/src/components/Startbar/styles.js",[],"/Users/maa48/github-projects/etesam-startpage/src/components/Window/helper.js",["129"],"/Users/maa48/github-projects/etesam-startpage/src/components/Startbar/items.js",[],"/Users/maa48/github-projects/etesam-startpage/src/styles/Headers.js",[],"/Users/maa48/github-projects/etesam-startpage/src/styles/Layout.js",[],"/Users/maa48/github-projects/etesam-startpage/src/components/Image/index.js",["130"],"import React, { useState, useContext, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { FlexContainer } from \"../../styles/Layout\";\nimport { TextAlignOptions } from \"../ComponentOptions\";\nimport { AppContext } from \"../../Contexts\";\nimport { changeItemProperty, handleDelete } from \"../Window/helper\";\nimport BackButton from \"../BackButton/index\";\nimport { DeleteButton, OptionsButton } from \"../../styles/StyledComponents\";\n\nfunction Image({ windowObj, windowItem }) {\n  const [isImageFocused, setIsImageFocused] = useState(false);\n  const [isRedirectClicked, setIsRedirectClicked] = useState(false);\n  const srcInput = useRef(null);\n  const redirectInput = useRef(null);\n  const redirectButton = useRef(null);\n\n  const { isEditModeOn, windowData, setWindowData } = useContext(AppContext);\n\n  function handleOptions() {\n    function setImageUrl() {\n      changeItemProperty(\n        windowObj,\n        windowData,\n        setWindowData,\n        windowItem,\n        \"src\",\n        srcInput.current.value.trim()\n      );\n      setIsImageFocused(false);\n    }\n\n\n    function setRedirectUrl() {\n      changeItemProperty(\n        windowObj,\n        windowData,\n        setWindowData,\n        windowItem,\n        \"href\",\n        redirectInput.current.value\n      );\n      setIsRedirectClicked(false);\n    }\n\n    function convertToImgWidth(e) {\n      const sliderVal = e.target.value;\n      const ratio = sliderVal / 20;\n      const ratioPercentage = (ratio * 100) + \"%\";\n      changeItemProperty(windowObj, windowData, setWindowData, windowItem, \"imageWidth\", ratioPercentage);\n    }\n    function convertToSliderWidth(valToConvert) {\n      const percentageNum = parseInt(valToConvert);\n      const ratioNum = percentageNum / 100;\n      return ratioNum*20;\n    }\n\n    if (!isImageFocused && !isRedirectClicked) {\n      return (\n        <FlexContainer width={\"100%\"}>\n          <TextAlignOptions windowItem={windowItem} windowObj={windowObj} />\n          <Slider className=\"field-row\">\n            <label htmlFor=\"range25\">Size:</label>\n            <input\n              id=\"range25\"\n              type=\"range\"\n              min={1}\n              max={20}\n              defaultValue={convertToSliderWidth(windowItem[\"imageWidth\"])}\n              onChange={(e) => {\n                convertToImgWidth(e);\n              }} />\n          </Slider>\n          <OptionsButton\n            onClick={() => {\n              setIsRedirectClicked(true);\n            }}\n            width=\"95px\"\n          >\n            Set Image Url\n          </OptionsButton>\n        </FlexContainer>\n      );\n    } else if (isImageFocused) {\n      return (\n        <FlexContainer width={\"100%\"}>\n          <input\n            ref={redirectInput}\n            style={{ width: \"100%\" }}\n            placeholder={\"Enter redirect url\"}\n            defaultValue={windowItem[\"href\"]}\n            onBlur={handleBlur}\n          />\n          <OptionsButton\n            onClick={setRedirectUrl}\n            width=\"140px\"\n            ref={redirectButton}\n          >\n            Set Redirect Url\n          </OptionsButton>\n        </FlexContainer>\n      );\n    } else if (isRedirectClicked) {\n      return (\n        <FlexContainer width={\"100%\"}>\n          <BackButton\n            aria-label=\"back button\"\n            margin={\"0 0.25rem 0 0\"}\n            onClick={() => {\n              setIsRedirectClicked(false);\n            }}\n          />\n          <input\n            ref={srcInput}\n            style={{ width: \"87%\" }}\n            placeholder={\"Enter image url\"}\n            defaultValue={windowItem[\"src\"] !== null ? windowItem[\"src\"] : \"\"}\n            /*onBlur={handleBlur}*/\n          />\n          <OptionsButton\n            onClick={setImageUrl}\n            width=\"110px\"\n          >\n            Set Image Url\n          </OptionsButton>\n        </FlexContainer>\n      );\n    }\n  }\n\n\n  function handleBlur() {\n    // Timeout is needed to allow for enough time to check if the user clicked on the src input after the blur.\n    // If they did, do not count that as removing image focus\n    let redirectButtonClicked = false;\n    if (redirectButton && redirectButton.current) {\n      redirectButton.current.addEventListener(\"click\", function() {\n        redirectButtonClicked = true;\n      });\n    }\n\n    setTimeout(function() {\n      if (redirectInput && redirectInput.current !== document.activeElement) {\n        setIsImageFocused(false);\n      }\n      if (!redirectButtonClicked) {\n        setIsRedirectClicked(false);\n      }\n\n    }, 200);\n    if (redirectButton && redirectButton.current) {\n      redirectButton.current.removeEventListener(\"click\", function() {\n        redirectButtonClicked = true;\n      });\n    }\n\n  }\n\n// TODO: Get window size so that image can be resized correctly if the window size is changed.\n\n  return (\n    <FlexContainer flexDirection={\"column\"} alignItems=\"center\">\n      {isEditModeOn &&\n      <FlexContainer margin={\"0 0 .5rem 0\"} width={\"100%\"}>\n        {handleOptions()}\n      </FlexContainer>\n      }\n\n      <FlexContainer justifyContent={windowItem[\"justifyContent\"]} width=\"100%\">\n        <ImageWrapper\n          href={isEditModeOn ? null : (windowItem[\"href\"] === \"\" ? \"javascript:void(0)\" : windowItem[\"href\"])}\n          onFocus={() => {\n            setIsRedirectClicked(false);\n            setIsImageFocused(true);\n          }}\n          onBlur={() => {\n            handleBlur();\n          }}\n          tabIndex={0}\n          imageWidth={windowItem[\"imageWidth\"]}\n        >\n          <ImageComponent src={windowItem[\"src\"]} />\n        </ImageWrapper>\n      </FlexContainer>\n      {isEditModeOn &&\n      <DeleteButton\n        margin={\"0.5rem 0 0\"}\n        onClick={() => {\n          handleDelete(windowData, setWindowData, windowObj, windowItem[\"id\"]);\n        }}>\n        Delete\n      </DeleteButton>}\n    </FlexContainer>\n  );\n}\n\nconst ImageComponent = styled.img`\n  width: 100%;\n  height: 100%;\n\n  :focus {\n    border: 1px solid blue;\n  }\n`;\n\nconst ImageWrapper = styled.a`\n  :focus {\n    outline: ${props => props.href === \"javascript:void(0)\" ? \"0\" : \"2px dotted gray\"};\n    cursor: ${props => props.href === \"javascript:void(0)\" ? props.theme.cursors.auto : props.theme.cursors.wait};\n  }\n;\n  cursor: ${props => props.href === \"javascript:void(0)\" ? props.theme.cursors.auto : props.theme.cursors.pointer};\n  display: block;\n  height: auto;\n  width: ${props => props.imageWidth};\n`;\n\nconst Slider = styled.div`\n  width: 9.5rem;\n  margin: 0 0.5rem;\n`;\n\nexport default Image;","/Users/maa48/github-projects/etesam-startpage/src/components/Header/index.js",[],"/Users/maa48/github-projects/etesam-startpage/src/components/Video/index.js",[],"/Users/maa48/github-projects/etesam-startpage/src/components/Toggle/index.js",[],"/Users/maa48/github-projects/etesam-startpage/src/styles/StyledComponents.js",[],"/Users/maa48/github-projects/etesam-startpage/src/components/SvgMaster.js",[],"/Users/maa48/github-projects/etesam-startpage/src/components/BackButton/index.js",[],"/Users/maa48/github-projects/etesam-startpage/src/components/ComponentOptions/index.js",[],"/Users/maa48/github-projects/etesam-startpage/src/styles/theme.js",[],"/Users/maa48/github-projects/etesam-startpage/src/components/List/index.js",["131"],"import React, { useContext, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { AppContext } from \"../../Contexts\";\nimport { changeItemProperty, handleDelete } from \"../Window/helper\";\nimport { FlexContainer } from \"../../styles/Layout\";\nimport { getMaxId } from \"../../functions/helpers\";\n\nfunction List({ windowItem, windowObj }) {\n  const { isEditModeOn, windowData, setWindowData } = useContext(AppContext);\n  const list = useRef(null);\n  const listInput = useRef(null);\n  const children = windowItem[\"children\"].map((child, index) => {\n    // is content editable true\n    if (!isEditModeOn && child[\"html\"].indexOf(\"true\") === 21 && child[\"html\"].indexOf(\"show\") !== -1) {\n      child[\"html\"] = child[\"html\"].replace(\"true\", \"false\");\n      child[\"html\"] = child[\"html\"].replace(\"show\", \"hide\");\n    } else if (isEditModeOn && child[\"html\"].indexOf(\"false\") === 21 && child[\"html\"].indexOf(\"hide\") !== -1) {\n      child[\"html\"] = child[\"html\"].replace(\"false\", \"true\");\n      child[\"html\"] = child[\"html\"].replace(\"hide\", \"show\");\n    }\n    return child[\"html\"];\n  }).join(\"\");\n\n  useEffect(() => {\n    list.current.innerHTML = children;\n    const listItems = list.current.getElementsByTagName(\"li\");\n    if (listItems) {\n      for (let i = 0; i < listItems.length; i++) {\n        let currentListItem = listItems[i];\n        if (!currentListItem.onblur) {\n          currentListItem.onblur = function(e) {\n            const tempChildren = [...windowItem[\"children\"]];\n            const strikethroughClass = currentListItem\n              .classList.contains(\"strikethrough\") ? \"strikethrough\" : \"\"\n            const strikethroughButtonText =\n              currentListItem\n                .classList.contains(\"strikethrough\") ? \"Remove Strikethrough\" : \"Strikethrough\";\n\n            tempChildren[i][\"html\"] =\n              `<li contenteditable=\"true\" class=\"list-item ${strikethroughClass}\">${e.target.innerText}</li>\n                <div class=\"list-item-options show\">\n                  <button class=\"list-delete-button\">Delete</button>\n                  <button class=\"list-strikethrough-button\">${strikethroughButtonText}</button>\n                </div>`;\n            changeItemProperty(\n              windowObj,\n              windowData,\n              setWindowData,\n              windowItem,\n              \"children\",\n              tempChildren\n            );\n          };\n        }\n      }\n    }\n\n    const deleteButtons = list.current.getElementsByClassName(\"list-delete-button\");\n    if (deleteButtons) {\n      for (let i = 0; i < deleteButtons.length; i++) {\n        let currentButton = deleteButtons[i];\n        currentButton.onclick = function() {\n          let tempChildren = [...windowItem[\"children\"]];\n          tempChildren.splice(i, 1);\n          changeItemProperty(\n            windowObj,\n            windowData,\n            setWindowData,\n            windowItem,\n            \"children\",\n            tempChildren\n          );\n        };\n      }\n    }\n\n    const strikethroughButtons = list.current.getElementsByClassName(\"list-strikethrough-button\");\n    if (strikethroughButtons) {\n      for (let i = 0; i < strikethroughButtons.length; i++) {\n        let currentButton = strikethroughButtons[i];\n        currentButton.onclick = function() {\n          const tempChildren = [...windowItem[\"children\"]];\n          const listItem = listItems[i];\n          /*tempChildren[i][\"html\"] = {*/\n          if (listItem.classList.contains(\"strikethrough\")) {\n            tempChildren[i][\"html\"] =\n              `<li contenteditable=\"true\" class=\"list-item\">${listItem.innerText}</li>\n                <div class=\"list-item-options show\">\n                  <button class=\"list-delete-button\">Delete</button>\n                  <button class=\"list-strikethrough-button\">Strikethrough</button>\n                </div>`;\n          } else {\n            tempChildren[i][\"html\"] =\n              `<li contenteditable=\"true\" class=\"list-item strikethrough\">${listItem.innerText}</li>\n                <div class=\"list-item-options show\">\n                  <button class=\"list-delete-button\">Delete</button>\n                  <button class=\"list-strikethrough-button\">Remove Strikethrough</button>\n                </div>`;\n          }\n\n          changeItemProperty(\n            windowObj,\n            windowData,\n            setWindowData,\n            windowItem,\n            \"children\",\n            tempChildren\n          );\n        };\n      }\n    }\n  }, [windowData, list, isEditModeOn]);\n\n  function handleClick() {\n    const tempChildren = [...windowItem[\"children\"]];\n    // TODO: Change this to get max id\n    let newId = 0;\n    if (tempChildren.length > 0)\n      newId = getMaxId(windowItem) + 1;\n\n    tempChildren.push({\n      id: newId,\n      html:\n        `<li contenteditable=\"true\" class=\"list-item\">${listInput.current.value}</li>\n        <div class=\"list-item-options show\">\n          <button class=\"list-delete-button\">Delete</button>\n          <button class=\"list-strikethrough-button\">Strikethrough</button>\n        </div>`\n    });\n\n    changeItemProperty(\n      windowObj,\n      windowData,\n      setWindowData,\n      windowItem,\n      \"children\",\n      tempChildren\n    );\n    listInput.current.value = \"\";\n  }\n\n\n  return (\n    <div>\n      <StyledList ref={list}>\n      </StyledList>\n      {isEditModeOn &&\n      <section>\n        <FlexContainer justifyContent=\"flex-start\" margin=\"0.5rem\">\n          <ListInput ref={listInput} placeholder=\"List Item Text Goes Here\" />\n          <ListButton onClick={handleClick}>Add Item</ListButton>\n        </FlexContainer>\n        <FlexContainer width=\"100%\" justifyContent=\"center\">\n          <button\n            onClick={() => {\n              handleDelete(windowData, setWindowData, windowObj, windowItem[\"id\"]);\n            }}\n          >\n            Delete List\n          </button>\n        </FlexContainer>\n      </section>\n      }\n    </div>\n\n  );\n}\n\nconst StyledList = styled.ul`\n  list-style-type: disc;\n  list-style-position: inside;\n  padding-left: 0.5rem;\n`;\n\nconst ListInput = styled.input`\n  width: 100%;\n`;\n\nconst ListButton = styled.button`\n  margin: 0 0 0 0.5rem;\n`;\n\nexport default List;","/Users/maa48/github-projects/etesam-startpage/src/components/DragIndicator/index.js",[],"/Users/maa48/github-projects/etesam-startpage/src/components/SearchBar/index.js",[],{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":17,"column":6,"nodeType":"138","endLine":17,"endColumn":30,"suggestions":"139"},{"ruleId":"140","severity":1,"message":"141","line":22,"column":7,"nodeType":"142","endLine":29,"endColumn":8},{"ruleId":"143","severity":1,"message":"144","line":11,"column":27,"nodeType":"145","messageId":"146","endLine":11,"endColumn":38},{"ruleId":"143","severity":1,"message":"147","line":11,"column":40,"nodeType":"145","messageId":"146","endLine":11,"endColumn":48},{"ruleId":"143","severity":1,"message":"148","line":1,"column":37,"nodeType":"145","messageId":"146","endLine":1,"endColumn":45},{"ruleId":"149","severity":1,"message":"150","line":47,"column":9,"nodeType":"151","messageId":"152","endLine":55,"endColumn":10},{"ruleId":"136","severity":1,"message":"153","line":50,"column":6,"nodeType":"138","endLine":50,"endColumn":13,"suggestions":"154"},{"ruleId":"143","severity":1,"message":"148","line":1,"column":29,"nodeType":"145","messageId":"146","endLine":1,"endColumn":37},{"ruleId":"143","severity":1,"message":"155","line":21,"column":12,"nodeType":"145","messageId":"146","endLine":21,"endColumn":20},{"ruleId":"136","severity":1,"message":"156","line":112,"column":6,"nodeType":"138","endLine":112,"endColumn":38,"suggestions":"157"},"no-native-reassign",["158"],"no-negated-in-lhs",["159"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'settingsData'. Either include it or remove the dependency array.","ArrayExpression",["160"],"jsx-a11y/role-supports-aria-props","The attribute aria-selected is not supported by the role button. This role is implicit on the element button.","JSXOpeningElement","no-unused-vars","'LoginButton' is defined but never used.","Identifier","unusedVar","'LoginImg' is defined but never used.","'useState' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","React Hook useEffect has missing dependencies: 'setSettingsData' and 'settingsData'. Either include them or remove the dependency array.",["161"],"'onResize' is defined but never used.","React Hook useEffect has missing dependencies: 'children', 'setWindowData', 'windowItem', and 'windowObj'. Either include them or remove the dependency array.",["162"],"no-global-assign","no-unsafe-negation",{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},"Update the dependencies array to be: [imageInput, colorInput, settingsData]",{"range":"169","text":"170"},"Update the dependencies array to be: [color, setSettingsData, settingsData]",{"range":"171","text":"172"},"Update the dependencies array to be: [windowData, list, isEditModeOn, children, windowItem, windowObj, setWindowData]",{"range":"173","text":"174"},[527,551],"[imageInput, colorInput, settingsData]",[1259,1266],"[color, setSettingsData, settingsData]",[4484,4516],"[windowData, list, isEditModeOn, children, windowItem, windowObj, setWindowData]"]